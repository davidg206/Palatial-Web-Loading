{"ast":null,"code":"import{osName,browserName}from'react-device-detect';var handleSubmit=function handleSubmit(userName,password,firstTimeUser,consentAccepted,device){if(userName&&password&&firstTimeUser!==null&&consentAccepted){var data={deviceType:device,osName:osName,browserName:browserName,userName:userName,consentAccepted:consentAccepted,firstTimeUser:firstTimeUser?\"Yes\":\"No\",password:password,timestamp:new Date().getTime()// current time in Epoch time\n};/*\n        //Use this to test if input is properly logged//\n\n        const json = JSON.stringify(data);\n        const blob = new Blob([json], {type: \"application/json\"});\n        const href = URL.createObjectURL(blob);\n\n        const link = document.createElement('a');\n        link.href = href;\n        link.download = 'userInformation.json';\n        \n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        */console.log(data);// replace this line with actual code to handle the data\n}else{// handle incomplete form\n}};export default handleSubmit;","map":{"version":3,"names":["osName","browserName","handleSubmit","userName","password","firstTimeUser","consentAccepted","device","data","deviceType","timestamp","Date","getTime","console","log"],"sources":["/home/david/Frontend/delegates/dom/src/Palatial-Web-Loading/src/utils/handleSubmit.js"],"sourcesContent":["import { osName, browserName } from 'react-device-detect';\n\nconst handleSubmit = (userName, password, firstTimeUser, consentAccepted, device) => {\n    if (userName && password && firstTimeUser !== null && consentAccepted) {\n        const data = {\n            deviceType: device,\n            osName: osName,\n            browserName: browserName,\n            userName: userName,\n            consentAccepted: consentAccepted,\n            firstTimeUser: firstTimeUser ? \"Yes\" : \"No\",\n            password: password,\n            timestamp: new Date().getTime() // current time in Epoch time\n        };\n\n        /*\n        //Use this to test if input is properly logged//\n\n        const json = JSON.stringify(data);\n        const blob = new Blob([json], {type: \"application/json\"});\n        const href = URL.createObjectURL(blob);\n\n        const link = document.createElement('a');\n        link.href = href;\n        link.download = 'userInformation.json';\n        \n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        */\n\n        console.log(data); // replace this line with actual code to handle the data\n    } else {\n        // handle incomplete form\n    }\n};\n\nexport default handleSubmit;"],"mappings":"AAAA,OAASA,MAAM,CAAEC,WAAW,KAAQ,qBAAqB,CAEzD,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,QAAQ,CAAEC,QAAQ,CAAEC,aAAa,CAAEC,eAAe,CAAEC,MAAM,CAAK,CACjF,GAAIJ,QAAQ,EAAIC,QAAQ,EAAIC,aAAa,GAAK,IAAI,EAAIC,eAAe,CAAE,CACnE,GAAM,CAAAE,IAAI,CAAG,CACTC,UAAU,CAAEF,MAAM,CAClBP,MAAM,CAAEA,MAAM,CACdC,WAAW,CAAEA,WAAW,CACxBE,QAAQ,CAAEA,QAAQ,CAClBG,eAAe,CAAEA,eAAe,CAChCD,aAAa,CAAEA,aAAa,CAAG,KAAK,CAAG,IAAI,CAC3CD,QAAQ,CAAEA,QAAQ,CAClBM,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAE;AACpC,CAAC,CAED;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAEQC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC,CAAE;AACvB,CAAC,IAAM,CACH;AAAA,CAER,CAAC,CAED,cAAe,CAAAN,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}