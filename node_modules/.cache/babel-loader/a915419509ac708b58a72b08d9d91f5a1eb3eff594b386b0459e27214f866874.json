{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/employee/Palatial-Web-Loading/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/employee/Palatial-Web-Loading/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _get from\"C:/Users/employee/Palatial-Web-Loading/node_modules/@babel/runtime/helpers/esm/get.js\";import _getPrototypeOf from\"C:/Users/employee/Palatial-Web-Loading/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";import _inherits from\"C:/Users/employee/Palatial-Web-Loading/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/employee/Palatial-Web-Loading/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _classCallCheck from\"C:/Users/employee/Palatial-Web-Loading/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/employee/Palatial-Web-Loading/node_modules/@babel/runtime/helpers/esm/createClass.js\";import'./assets/css/player.css';import{EventEmitter}from\"events\";import*as libspsfrontend from'backend-dom-components';/**\r\n * Class for the base overlay structure \r\n */export var OverlayBase=/*#__PURE__*/function(){/**\r\n\t * Construct an overlay \r\n\t * @param rootDiv the root element this overlay will be inserted into \r\n\t * @param rootElement the root element that is the overlay\r\n\t */function OverlayBase(rootDiv,rootElement,textElement){_classCallCheck(this,OverlayBase);this.rootElement=void 0;this.rootDiv=void 0;this.textElement=void 0;this.rootDiv=rootDiv;this.rootElement=rootElement;this.textElement=textElement;this.rootElement.appendChild(this.textElement);this.hide();this.rootDiv.appendChild(this.rootElement);}/**\r\n\t * Show the overlay \r\n\t */_createClass(OverlayBase,[{key:\"show\",value:function show(){this.rootElement.classList.remove(\"hiddenState\");}/**\r\n\t * Hide the overlay\r\n\t */},{key:\"hide\",value:function hide(){this.rootElement.classList.add(\"hiddenState\");}}]);return OverlayBase;}();/**\r\n * Class for the base action overlay structure \r\n */export var ActionOverlayBase=/*#__PURE__*/function(_OverlayBase){_inherits(ActionOverlayBase,_OverlayBase);var _super=_createSuper(ActionOverlayBase);/**\r\n\t * Construct an action overlay \r\n\t * @param rootDiv the root element this overlay will be inserted into \r\n\t * @param rootElement the root element that is the overlay\r\n\t * @param contentElement an element that contains text for the action overlay \r\n\t */function ActionOverlayBase(rootDiv,rootElement,contentElement,contentElementSpanId){var _this;_classCallCheck(this,ActionOverlayBase);_this=_super.call(this,rootDiv,rootElement,contentElement);_this.eventEmitter=void 0;_this.contentElementSpanId=void 0;_this.eventEmitter=new EventEmitter();_this.contentElementSpanId=contentElementSpanId;return _this;}/**\r\n\t * Update the text overlays inner text \r\n\t * @param text the update text to be inserted into the overlay \r\n\t */_createClass(ActionOverlayBase,[{key:\"update\",value:function update(text){if((text!=null||text!=undefined)&&(this.contentElementSpanId!=null||this.contentElementSpanId!=undefined)){document.getElementById(this.contentElementSpanId).innerHTML=text;}}/**\r\n\t * Set a method as an event emitter callback \r\n\t * @param callBack the method that is to be called when the event is emitted \r\n\t */},{key:\"onAction\",value:function onAction(callBack){this.eventEmitter.on(\"action\",callBack);}/**\r\n\t * Activate an event that is attached to the event emitter \r\n\t */},{key:\"activate\",value:function activate(){this.eventEmitter.emit(\"action\");}}]);return ActionOverlayBase;}(OverlayBase);/**\r\n * Class for the afk overlay base \r\n */export var AfkOverlayBase=/*#__PURE__*/function(_ActionOverlayBase){_inherits(AfkOverlayBase,_ActionOverlayBase);var _super2=_createSuper(AfkOverlayBase);/**\r\n\t * Construct an Afk overlay \r\n\t * @param rootDiv the root element this overlay will be inserted into \r\n\t * @param rootElement the root element that is the overlay\r\n\t * @param textElement an element that contains text for the action overlay  \r\n\t * @param countDownSpanElementId the id of the span that holds the countdown element \r\n\t */function AfkOverlayBase(rootDiv,rootElement,textElement,countDownSpanElementId){var _this2;_classCallCheck(this,AfkOverlayBase);_this2=_super2.call(this,rootDiv,rootElement,textElement);_this2.countDownSpanElementId=void 0;_this2.countDownSpanElementId=countDownSpanElementId;return _this2;}/**\r\n\t * Update the count down spans number for the overlay \r\n\t * @param countdown the count down number to be inserted into the span for updating\r\n\t */_createClass(AfkOverlayBase,[{key:\"updateCountdown\",value:function updateCountdown(countdown){document.getElementById(this.countDownSpanElementId).innerHTML=countdown.toString();}}]);return AfkOverlayBase;}(ActionOverlayBase);/**\r\n * Class for the text overlay base \r\n */export var TextOverlayBase=/*#__PURE__*/function(_OverlayBase2){_inherits(TextOverlayBase,_OverlayBase2);var _super3=_createSuper(TextOverlayBase);/**\r\n\t * Construct a text overlay \r\n\t * @param rootDiv the root element this overlay will be inserted into \r\n\t * @param rootElement the root element that is the overlay\r\n\t * @param textElement an element that contains text for the action overlay  \r\n\t */function TextOverlayBase(rootDiv,rootElement,textElement){_classCallCheck(this,TextOverlayBase);return _super3.call(this,rootDiv,rootElement,textElement);}/**\r\n\t * Update the text overlays inner text \r\n\t * @param text the update text to be inserted into the overlay \r\n\t */_createClass(TextOverlayBase,[{key:\"update\",value:function update(text){if(text!=null||text!=undefined){this.textElement.innerHTML=text;}}}]);return TextOverlayBase;}(OverlayBase);/**\r\n * Class for the VideoQp indicator\r\n */export var VideoQpIndicator=/*#__PURE__*/function(){/**\r\n\t * construct a VideoQpIndicator object\r\n\t * @param qualityStatusId the html id of the qualityStatus element\r\n\t * @param qualityTextId the html id of the qualityText element\r\n\t * @param outerId the html id of the outer element\r\n\t * @param middleId the html id of the middle element\r\n\t * @param innerId the html id of the inner element\r\n\t * @param dotId the html id of the dot element\r\n\t */function VideoQpIndicator(qualityStatusId,qualityTextId,outerId,middleId,innerId,dotId){_classCallCheck(this,VideoQpIndicator);this.videoEncoderAvgQP=-1;// the icon itself\nthis.qualityStatus=void 0;// = document.getElementById(\"connectionStrength\");\n// the text that displays under the icon\nthis.qualityText=void 0;// = document.getElementById(\"qualityText\");\n// svg paths\nthis.outer=void 0;//= document.getElementById(\"outer\");\nthis.middle=void 0;//= document.getElementById(\"middle\");\nthis.inner=void 0;// = document.getElementById(\"inner\");\nthis.dot=void 0;// = document.getElementById(\"dot\");\n// non html elements \nthis.statsText=\"\";this.color=\"\";// qp colours \nthis.orangeQP=26;this.redQP=35;this.qualityStatus=document.getElementById(qualityStatusId);this.qualityText=document.getElementById(qualityTextId);this.outer=document.getElementById(outerId);this.middle=document.getElementById(middleId);this.inner=document.getElementById(innerId);this.dot=document.getElementById(dotId);}/**\r\n\t * used to set the speed of the status light\r\n\t * @param speed - Set the speed of the blink if the status light higher the speed the faster the blink\r\n\t */_createClass(VideoQpIndicator,[{key:\"blinkVideoQualityStatus\",value:function blinkVideoQualityStatus(speed){var _this3=this;var iteration=speed;var opacity=1;var tickID=setInterval(function(){opacity-=0.1;_this3.qualityText.style.opacity=String(Math.abs((opacity-0.5)*2));if(opacity<=0.1){if(--iteration==0){clearInterval(tickID);}else{opacity=1;}}},100/speed);}/**\r\n\t  * updates the QP tooltip by converting the Video Encoder QP to a colour light\r\n\t  * @param QP - The video encoder QP number needed to find the average\r\n\t  */},{key:\"updateQpTooltip\",value:function updateQpTooltip(QP){this.videoEncoderAvgQP=QP;if(QP>this.redQP){this.color=\"red\";this.blinkVideoQualityStatus(2);this.statsText=\"<div style=\\\"color: \".concat(this.color,\"\\\">Poor encoding quality</div>\");this.outer.style.fill=\"#3c3b40\";this.middle.style.fill=\"#3c3b40\";this.inner.style.fill=this.color;this.dot.style.fill=this.color;}else if(QP>this.orangeQP){this.color=\"orange\";this.blinkVideoQualityStatus(1);this.statsText=\"<div style=\\\"color: \".concat(this.color,\"\\\">Blocky encoding quality</div>\");this.outer.style.fill=\"#3c3b40\";this.middle.style.fill=this.color;this.inner.style.fill=this.color;this.dot.style.fill=this.color;}else if(QP<=0){this.color=\"#b0b0b0\";this.outer.style.fill=\"#3c3b40\";this.middle.style.fill=\"#3c3b40\";this.inner.style.fill=\"#3c3b40\";this.dot.style.fill=\"#3c3b40\";this.statsText=\"<div style=\\\"color: \".concat(this.color,\"\\\">Not connected</div>\");}else{this.color=\"lime\";this.qualityStatus.style.opacity='1';this.statsText=\"<div style=\\\"color: \".concat(this.color,\"\\\">Clear encoding quality</div>\");this.outer.style.fill=this.color;this.middle.style.fill=this.color;this.inner.style.fill=this.color;this.dot.style.fill=this.color;}this.qualityText.innerHTML=this.statsText;}}]);return VideoQpIndicator;}();/**\r\n * Class for handling fullscreen logic\r\n */export var FullScreenLogic=/*#__PURE__*/function(){/**\r\n\t * Construct a FullScreenLogic object\r\n\t */function FullScreenLogic(){var _this4=this;_classCallCheck(this,FullScreenLogic);this.isFullscreen=false;document.getElementById(\"fullscreen-btn\").onclick=function(){return _this4.fullscreen();};// set up the full screen events\ndocument.addEventListener('webkitfullscreenchange',function(){return _this4.onFullscreenChange();},false);document.addEventListener('mozfullscreenchange',function(){return _this4.onFullscreenChange();},false);document.addEventListener('fullscreenchange',function(){return _this4.onFullscreenChange();},false);document.addEventListener('MSFullscreenChange',function(){return _this4.onFullscreenChange();},false);}/**\r\n\t * Makes the document fullscreen \r\n\t * @returns \r\n\t */_createClass(FullScreenLogic,[{key:\"fullscreen\",value:function fullscreen(){// if already full screen; exit\n// else go fullscreen\nif(document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement){if(document.exitFullscreen){document.exitFullscreen();}else if(document.mozCancelFullScreen){document.mozCancelFullScreen();}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();}else if(document.msExitFullscreen){document.msExitFullscreen();}}else{var element;//HTML elements controls\nif(!(document.fullscreenEnabled||document.webkitFullscreenEnabled)){element=document.getElementById(\"streamingVideo\");}else{element=document.getElementById(\"playerUI\");}if(!element){return;}if(element.requestFullscreen){element.requestFullscreen();}else if(element.mozRequestFullScreen){element.mozRequestFullScreen();}else if(element.webkitRequestFullscreen){element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);}else if(element.msRequestFullscreen){element.msRequestFullscreen();}else if(element.webkitEnterFullscreen){element.webkitEnterFullscreen();//for iphone this code worked\n}}this.onFullscreenChange();}/**\r\n\t * Handles the fullscreen button on change\r\n\t */},{key:\"onFullscreenChange\",value:function onFullscreenChange(){this.isFullscreen=document.webkitIsFullScreen||document.mozFullScreen||document.msFullscreenElement&&document.msFullscreenElement!==null||document.fullscreenElement&&document.fullscreenElement!==null;var minimize=document.getElementById('minimizeIcon');var maximize=document.getElementById('maximizeIcon');if(minimize&&maximize){if(this.isFullscreen){minimize.style.display='inline';//ios disappearing svg fix\nminimize.style.transform='translate(0, 0)';maximize.style.display='none';}else{minimize.style.display='none';maximize.style.display='inline';//ios disappearing svg fix\nmaximize.style.transform='translate(0, 0)';}}}}]);return FullScreenLogic;}();export var NativeDOMDelegate=/*#__PURE__*/function(_libspsfrontend$Deleg){_inherits(NativeDOMDelegate,_libspsfrontend$Deleg);var _super4=_createSuper(NativeDOMDelegate);function NativeDOMDelegate(config){var _this5;_classCallCheck(this,NativeDOMDelegate);_this5=_super4.call(this,config);_this5.config=void 0;_this5.latencyStartTime=void 0;_this5.videoStartTime=void 0;_this5.mobileUser=void 0;_this5.streamReady=void 0;// instantiate the WebRtcPlayerControllers interface var \n_this5.iWebRtcController=void 0;_this5.showStats=void 0;// HTML Elements that are used multiple times\n// Global\n_this5.videoQpIndicator=void 0;_this5.fullScreenLogic=void 0;// settings and stats panels\n_this5.settingsPanel=document.getElementById('settings-panel');_this5.statsPanel=document.getElementById('stats-panel');// Pre Stream options\n_this5.forceTurnToggle=document.getElementById(\"force-turn-tgl\");// Viewing\n_this5.enlargeDisplayToFillWindow=document.getElementById(\"enlarge-display-to-fill-window-tgl\");_this5.qualityControlOwnershipCheckBox=document.getElementById(\"quality-control-ownership-tgl\");_this5.toggleMatchViewPortRes=document.getElementById(\"match-viewport-res-tgl\");_this5.controlSchemeToggle=document.getElementById(\"control-scheme-tgl\");_this5.controlSchemeToggleTitle=document.getElementById(\"control-scheme-title\");// Commands\n_this5.uiDescriptorText=document.getElementById(\"ui-descriptor-text\");// Settings\n_this5.encoderMinQpText=document.getElementById(\"encoder-min-qp-text\");_this5.encoderMaxQpText=document.getElementById(\"encoder-max-qp-text\");_this5.webRtcFpsText=document.getElementById(\"webrtc-fps-text\");_this5.webRtcMinBitrateText=document.getElementById(\"webrtc-min-bitrate-text\");_this5.webRtcMaxBitrateText=document.getElementById(\"webrtc-max-bitrate-text\");// Statistics\n_this5.sendStatsToServer=document.getElementById(\"send-stats-tgl\");// Containers Headers\n_this5.preStreamContainer=document.getElementById(\"preStreamOptionsHeader\");_this5.viewSettingsHeader=document.getElementById(\"viewSettingsHeader\");_this5.commandsHeader=document.getElementById(\"commandsHeader\");_this5.streamingSettingsHeader=document.getElementById(\"streamingSettingsHeader\");_this5.statsHeader=document.getElementById(\"statisticsHeader\");_this5.latencyHeader=document.getElementById(\"latencyTestHeader\");// Containers\n_this5.viewSettingsContainer=document.getElementById(\"viewSettingsContainer\");_this5.commandsContainer=document.getElementById(\"commandsContainer\");_this5.streamingSettingsContainer=document.getElementById(\"streamingSettingsContainer\");_this5.statsContainer=document.getElementById(\"statisticsContainer\");_this5.latencyContainer=document.getElementById(\"latencyTestContainer\");_this5.appName=void 0;_this5.config=config;_this5.showStats=true;_this5.videoQpIndicator=new VideoQpIndicator(\"connectionStrength\",\"qualityText\",\"outer\",\"middle\",\"inner\",\"dot\");_this5.fullScreenLogic=new FullScreenLogic();_this5.streamReady=false;// build all of the overlays \n_this5.buildDisconnectOverlay();_this5.buildConnectOverlay();_this5.buildPlayOverlay();_this5.buildAfkOverlay();_this5.buildInfoOverlay();_this5.buildErrorOverlay();// configure all buttons \n_this5.ConfigureButtons();return _this5;}_createClass(NativeDOMDelegate,[{key:\"updateVideoStreamSize\",value:function updateVideoStreamSize(x,y){this.iWebRtcController.ueDescriptorUi.sendUpdateVideoStreamSize(x,y);}},{key:\"write\",value:function write(file,message){var data={filename:file,data:message};fetch('https://prophet.palatialxr.com:3001/save',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){console.log(\"statusCode: \".concat(response.status));return response.json();}).then(function(data){console.log(data);}).catch(function(error){console.error(error);});}/**\r\n\t * Builds the disconnect overlay \r\n\t */},{key:\"buildDisconnectOverlay\",value:function buildDisconnectOverlay(){var _this6=this;// build the overlay base div \nvar disconnectOverlayHtml=document.createElement('div');disconnectOverlayHtml.id=\"disconnectOverlay\";disconnectOverlayHtml.className=\"clickableState\";// set the event Listener\nvar disconnectOverlayEvent=function disconnectOverlayEvent(){return _this6.onDisconnectionAction();};var self=this;// add the new event listener \ndisconnectOverlayHtml.addEventListener('click',function onOverlayClick(event){disconnectOverlayEvent(event);//whuzz\n});// build the inner html container \nvar disconnectOverlayHtmlInnerContainer=document.createElement('div');disconnectOverlayHtmlInnerContainer.id='disconnectButton';// build the span that holds error text\nvar disconnectOverlayInnerSpan=document.createElement('span');disconnectOverlayInnerSpan.id='disconnectText';disconnectOverlayInnerSpan.innerHTML='Click To Restart';// build the image element that holds the reconnect element\nvar restartSvg=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");restartSvg.setAttribute('width',\"40\");restartSvg.setAttribute('height',\"40\");restartSvg.setAttribute('fill',\"currentColor\");restartSvg.setAttribute('class',\"bi bi-arrow-counterclockwise m-2\");restartSvg.setAttribute('viewBox',\"0 0 16 16\");// build the arrow path \nvar restartSvgPathArrow=document.createElementNS('http://www.w3.org/2000/svg','path');restartSvgPathArrow.setAttribute('fill-rule',\"evenodd\");restartSvgPathArrow.setAttribute('d',\"M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z\");// build the circle path\nvar restartSvgPathCircle=document.createElementNS('http://www.w3.org/2000/svg','path');restartSvgPathCircle.setAttribute('d',\"M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z\");// bring it all together\nrestartSvg.appendChild(restartSvgPathArrow);restartSvg.appendChild(restartSvgPathCircle);// append the span and images to the content container \ndisconnectOverlayHtmlInnerContainer.appendChild(disconnectOverlayInnerSpan);disconnectOverlayHtmlInnerContainer.appendChild(restartSvg);// instantiate the overlay\nthis.disconnectOverlay=new ActionOverlayBase(this.config.playerElement,disconnectOverlayHtml,disconnectOverlayHtmlInnerContainer,\"disconnectText\");}/**\r\n\t * Builds the connect overlay \r\n\t */},{key:\"buildConnectOverlay\",value:function buildConnectOverlay(){var _this7=this;// build the overlay base div \nvar connectOverlayHtml=document.createElement('div');connectOverlayHtml.id=\"connectOverlay\";connectOverlayHtml.className=\"clickableState\";// set the event Listener\nvar connectOverlayEvent=function connectOverlayEvent(){return _this7.onConnectAction();};// add the new event listener \nconnectOverlayHtml.addEventListener('click',function onOverlayClick(event){connectOverlayEvent(event);});// build the inner html \nvar connectOverlayHtmlInner=document.createElement('div');connectOverlayHtmlInner.id='connectButton';connectOverlayHtmlInner.innerHTML='Click to start';// instantiate the overlay\nthis.connectOverlay=new ActionOverlayBase(this.config.playerElement,connectOverlayHtml,connectOverlayHtmlInner);}/**\r\n\t * Builds the play overlay \r\n\t */},{key:\"buildPlayOverlay\",value:function buildPlayOverlay(){var _this8=this;// build the overlay base div \nvar playOverlayHtml=document.createElement('div');//playOverlayHtml.id = \"startText\";\n//playOverlayHtml.classList.add(\"clickableState\", \"loadingText\");\n// set the event Listener\nvar playOverlayEvent=function playOverlayEvent(){return _this8.onPlayAction();};// add the new event listener\n/*playOverlayHtml.addEventListener('click', function onOverlayClick(event: Event) {\r\n                        playOverlayEvent(event);\r\n                        document.getElementById('container').style.display = 'none';\r\n                        document.body.style.cursor = 'none';\r\n                        openFullscreen();\r\n                });*/ // build the inner html \nvar playOverlayHtmlInner=document.createElement('div');//playOverlayHtmlInner.className = \"disconnectText\";\n//playOverlayHtmlInner.innerHTML = \"Click to start\";\n// instantiate the overlay\nthis.playOverlay=new ActionOverlayBase(this.config.playerElement,playOverlayHtml,playOverlayHtmlInner);}/**\r\n\t * Builds the Afk overlay \r\n\t */},{key:\"buildAfkOverlay\",value:function buildAfkOverlay(){var _this9=this;// build the overlay base div \nvar afkOverlayHtml=document.createElement('div');afkOverlayHtml.id=\"afkOverlay\";afkOverlayHtml.className=\"clickableState\";var afkOverlayEvent=function afkOverlayEvent(){return _this9.onAfkAction();};afkOverlayHtml.addEventListener('click',function onOverlayClick(event){afkOverlayEvent(event);});// build the inner html\nvar afkOverlayHtmlInner=document.createElement('div');afkOverlayHtmlInner.id='afkOverlayInner';afkOverlayHtmlInner.innerHTML='<center>No activity detected<br>Disconnecting in <span id=\"afkCountDownNumber\"></span> seconds<br>Click to continue<br></center>';// instantiate the overlay\nthis.afkOverlay=new AfkOverlayBase(this.config.playerElement,afkOverlayHtml,afkOverlayHtmlInner,\"afkCountDownNumber\");}/**\r\n\t * Builds the info overlay \r\n\t */},{key:\"buildInfoOverlay\",value:function buildInfoOverlay(){// build the overlay base div \nvar infoOverlayHtml=document.createElement('div');infoOverlayHtml.id=\"infoOverlay\";infoOverlayHtml.className=\"textDisplayState\";// build the inner html\nvar infoOverlayHtmlInner=document.createElement('div');infoOverlayHtmlInner.id='messageOverlayInner';// instantiate the overlay\nthis.infoOverlay=new TextOverlayBase(this.config.playerElement,infoOverlayHtml,infoOverlayHtmlInner);}/**\r\n\t * Builds the error overlay \r\n\t */},{key:\"buildErrorOverlay\",value:function buildErrorOverlay(){// build the overlay base div \nvar errorOverlayHtml=document.createElement('div');errorOverlayHtml.id=\"errorOverlay\";errorOverlayHtml.className=\"textDisplayState\";// build the inner html\nvar errorOverlayHtmlInner=document.createElement('div');errorOverlayHtmlInner.id='errorOverlayInner';errorOverlayHtmlInner.classList.add(\".text-danger\");// instantiate the overlay\nthis.errorOverlay=new TextOverlayBase(this.config.playerElement,errorOverlayHtml,errorOverlayHtmlInner);}/**\r\n\t * Shows a text overlay to alert the user the stream is currently loading\r\n\t */},{key:\"onStreamLoading\",value:function onStreamLoading(){// build the spinner span\nvar spinnerSpan=document.createElement('span');spinnerSpan.className=\"visually-hidden\";spinnerSpan.innerHTML=\"Loading\";// build the spinner div\nvar spinnerDiv=document.createElement('div');spinnerDiv.id=\"loading-spinner\";spinnerDiv.className=\"spinner-border ms-2\";spinnerDiv.setAttribute(\"role\",\"status\");// append the spinner to the element\nspinnerDiv.appendChild(spinnerSpan);this.showTextOverlay(\"Loading Stream \"+spinnerDiv.outerHTML);}},{key:\"zoomIn\",value:function zoomIn(){var scaleFactor=1.2;var currentScale=parseFloat(document.body.style.transform.replace('scale(','').replace(')',''));var newScale=currentScale?currentScale*scaleFactor:scaleFactor;document.body.style.transform=\"scale(\".concat(newScale,\")\");}/**\r\n\t* Set up functionality to happen when an instance state change occurs and updates the info overlay with the response\r\n\t* @param instanceState - the message instance state \r\n\t*/},{key:\"onInstanceStateChange\",value:function onInstanceStateChange(instanceState){var instanceStateMessage=\"\";var isInstancePending=false;var isError=false;// get the response type\nswitch(instanceState.state){case libspsfrontend.InstanceState.UNALLOCATED:instanceStateMessage=\"Instance Unallocated: \"+instanceState.details;break;case libspsfrontend.InstanceState.FAILED:instanceStateMessage=\"UE Instance Failed: \"+instanceState.details;isError=true;break;case libspsfrontend.InstanceState.PENDING:isInstancePending=true;if(instanceState.details==undefined||instanceState.details==null){instanceStateMessage=\"Your application is pending\";}else{instanceStateMessage=instanceState.details;}break;case libspsfrontend.InstanceState.READY:if(instanceState.details==undefined||instanceState.details==null){instanceStateMessage=\"Instance is Ready\";}else{instanceStateMessage=\"Instance is Ready: \"+instanceState.details;}break;default:instanceStateMessage=\"Unhandled Instance State\"+instanceState.state+\" \"+instanceState.details;break;}if(isError){this.showErrorOverlay(instanceStateMessage);}else if(isInstancePending){//check if there is already and instance pending if so return \nvar preExistingPendingMessage=document.getElementById('loading-spinner');if(preExistingPendingMessage){// only update our text div\nvar textDiv=document.getElementById(\"text-\"+instanceState.id);textDiv.innerHTML=instanceStateMessage;return;}// build a wrapper to hold our text and our spinner\nvar wrapperDiv=document.createElement('div');// build a text div to hold our text message\nvar textSpan=document.createElement('span');textSpan.id=\"text-\"+instanceState.id;textSpan.innerHTML=instanceStateMessage;// build the spinner span\nvar spinnerSpan=document.createElement('span');spinnerSpan.className=\"visually-hidden\";spinnerSpan.innerHTML=\"Loading...\";// build the spinner div\nvar spinnerDiv=document.createElement('div');spinnerDiv.id=\"loading-spinner\";spinnerDiv.className=\"spinner-border ms-2\";spinnerDiv.setAttribute(\"role\",\"status\");// append wrapper and the spinner to the element\nwrapperDiv.appendChild(textSpan);wrapperDiv.appendChild(spinnerDiv).appendChild(spinnerSpan);// insert the inner html into the base div\nthis.showTextOverlay(wrapperDiv.outerHTML);}else{}function openFullscreen(){var body=document.documentElement;if(body.requestFullscreen){body.requestFullscreen();}else if(body.webkitRequestFullscreen){/* Safari */body.webkitRequestFullscreen();}else if(body.msRequestFullscreen){/* IE11 */body.msRequestFullscreen();}}}/**\r\n\t * Set up functionality to happen when receiving an auth response and updates an info overlay with the response\r\n\t * @param authResponse - the auth response message type\r\n\t */},{key:\"onAuthenticationResponse\",value:function onAuthenticationResponse(authResponse){var instanceStateMessage=\"\";var isError=false;// get the response type\nswitch(authResponse.outcome){case libspsfrontend.MessageAuthResponseOutcomeType.AUTHENTICATED:instanceStateMessage=\"Authentication has succeeded. Requesting Instance\";break;case libspsfrontend.MessageAuthResponseOutcomeType.INVALID_TOKEN:instanceStateMessage=\"Invalid Token: \"+authResponse.error;isError=true;break;case libspsfrontend.MessageAuthResponseOutcomeType.REDIRECT:instanceStateMessage=\"Redirecting to: \"+authResponse.redirect;break;case libspsfrontend.MessageAuthResponseOutcomeType.ERROR:instanceStateMessage=\"Error: \"+authResponse.error;isError=true;break;default:instanceStateMessage=\"Unhandled Auth Response: \"+authResponse.outcome;break;}// if the response is an error show the error instead of the info \nif(isError){this.showErrorOverlay(instanceStateMessage);}else{this.showTextOverlay(instanceStateMessage);}}/**\r\n\t * Set up button click functions and button functionality  \r\n\t */},{key:\"ConfigureButtons\",value:function ConfigureButtons(){var _this10=this;// set up the settings \ndocument.getElementById('settingsBtn').onclick=function(){return _this10.settingsClicked();};document.getElementById('settingsClose').onclick=function(){return _this10.settingsClicked();};// setup the info button\ndocument.getElementById('statsBtn').onclick=function(){return _this10.statsClicked();};document.getElementById('statsClose').onclick=function(){return _this10.statsClicked();};// setup the Force TURN toggle\nthis.setUpToggleWithUrlParams(this.forceTurnToggle,\"ForceTURN\");this.setUpControlSchemeTypeToggle(this.controlSchemeToggle);// set up the restart stream button\ndocument.getElementById(\"restart-stream-button\").onclick=function(){_this10.settingsPanel.classList.toggle(\"panel-wrap-visible\");_this10.iWebRtcController.restartStreamAutomaticity();};document.getElementById(\"btn-streaming-settings\").onclick=function(){libspsfrontend.Logger.Log(libspsfrontend.Logger.GetStackTrace(),\"--------  Sending Streaming settings  --------\",7);var encode={MinQP:Number(_this10.encoderMinQpText.value),MaxQP:Number(_this10.encoderMaxQpText.value)};var webRtcSettings={FPS:Number(_this10.webRtcFpsText.value),MinBitrate:Number(_this10.webRtcMinBitrateText.value)*1000,MaxBitrate:Number(_this10.webRtcMaxBitrateText.value)*1000};_this10.iWebRtcController.sendEncoderSettings(encode);_this10.iWebRtcController.sendWebRtcSettings(webRtcSettings);libspsfrontend.Logger.Log(libspsfrontend.Logger.GetStackTrace(),\"-------------------------------------------\",7);};// sending UI descriptors \ndocument.getElementById(\"sendUiDescriptor\").onclick=function(){_this10.iWebRtcController.sendUeUiDescriptor(_this10.uiDescriptorText.value);};// show the current fps on screen \ndocument.getElementById(\"show-fps-button\").onclick=function(){_this10.iWebRtcController.sendShowFps();};// make the player fill the window\nthis.enlargeDisplayToFillWindow.onchange=function(){_this10.iWebRtcController.resizePlayerStyle();_this10.iWebRtcController.setEnlargeToFillDisplay(_this10.enlargeDisplayToFillWindow.checked);};// make the player match the view port resolution \nthis.toggleMatchViewPortRes.onchange=function(){_this10.iWebRtcController.matchViewportResolution=_this10.toggleMatchViewPortRes.checked;_this10.iWebRtcController.updateVideoStreamSize();};// quality control ownership checkbox \nthis.qualityControlOwnershipCheckBox.onchange=function(){if(_this10.qualityControlOwnershipCheckBox.checked===false){_this10.iWebRtcController.sendRequestQualityControlOwnership();}};}/**\r\n\t * Shows or hides the settings panel if clicked\r\n\t */},{key:\"settingsClicked\",value:function settingsClicked(){/**\r\n\t\t * Toggle settings panel. If stats panel is already open, close it and then open settings\r\n\t\t */if(this.statsPanel.classList.contains(\"panel-wrap-visible\")){this.statsPanel.classList.toggle(\"panel-wrap-visible\");}this.settingsPanel.classList.toggle(\"panel-wrap-visible\");}/**\r\n\t * Shows or hides the stats panel if clicked\r\n\t */},{key:\"statsClicked\",value:function statsClicked(){/**\r\n\t\t * Toggle stats panel. If settings panel is already open, close it and then open stats\r\n\t\t */if(this.settingsPanel.classList.contains(\"panel-wrap-visible\")){this.settingsPanel.classList.toggle(\"panel-wrap-visible\");}this.statsPanel.classList.toggle(\"panel-wrap-visible\");}/**\r\n\t * Set up toggle element for controlling hovering mouse or locked mouse  \r\n\t * @param toggleElement the toggle html element to be set up\r\n\t */},{key:\"setUpControlSchemeTypeToggle\",value:function setUpControlSchemeTypeToggle(toggleElement){var _this11=this;if(toggleElement){// set the state for the toggle based on the config\nif(this.config.controlScheme===libspsfrontend.ControlSchemeType.LockedMouse){this.controlSchemeToggleTitle.innerHTML=\"Control Scheme: Locked Mouse\";this.controlSchemeToggle.checked=false;}else{this.controlSchemeToggleTitle.innerHTML=\"Control Scheme: Hovering Mouse\";this.controlSchemeToggle.checked=true;}// set the onChange event \ntoggleElement.onchange=function(){if(toggleElement.checked===true){_this11.controlSchemeToggleTitle.innerHTML=\"Control Scheme: Hovering Mouse\";_this11.config.controlScheme=libspsfrontend.ControlSchemeType.HoveringMouse;_this11.iWebRtcController.activateRegisterMouse();}else{_this11.controlSchemeToggleTitle.innerHTML=\"Control Scheme: Locked Mouse\";_this11.config.controlScheme=libspsfrontend.ControlSchemeType.LockedMouse;_this11.iWebRtcController.activateRegisterMouse();}};}}/**\r\n\t * Set up url toggle buttons\r\n\t * @param toggleElement the toggle element being activated  \r\n\t * @param urlParameterKey the url key that is being made use of\r\n\t */},{key:\"setUpToggleWithUrlParams\",value:function setUpToggleWithUrlParams(toggleElement,urlParameterKey){if(toggleElement){//Check if the element has been set from the URL Params \ntoggleElement.checked=new URLSearchParams(window.location.search).has(urlParameterKey);toggleElement.onchange=function(){var urlParams=new URLSearchParams(window.location.search);if(toggleElement.checked===true){urlParams.set(urlParameterKey,\"true\");}else{urlParams.delete(urlParameterKey);}window.history.replaceState({},'',urlParams.toString()!==\"\"?\"\".concat(window.location.pathname,\"?\").concat(urlParams):\"\".concat(window.location.pathname));};}}/**\r\n\t * Disable shared session links for all players\r\n\t * @returns false\r\n\t */},{key:\"IsLinkSharingEnabled\",value:function(){var _IsLinkSharingEnabled=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",false);case 1:case\"end\":return _context.stop();}},_callee);}));function IsLinkSharingEnabled(){return _IsLinkSharingEnabled.apply(this,arguments);}return IsLinkSharingEnabled;}()/**\r\n\t * Handle when the Video has been Initialised\r\n\t */},{key:\"onVideoInitialised\",value:function onVideoInitialised(){var _this12=this;console.log('ready!');this.streamReady=true;// starting a latency check\ndocument.getElementById(\"btn-start-latency-test\").onclick=function(){_this12.iWebRtcController.sendLatencyTest();};// Set up stream tools header functionality\nthis.viewSettingsHeader.onclick=function(){_this12.viewSettingsContainer.classList.contains(\"d-none\")?_this12.viewSettingsContainer.classList.remove(\"d-none\"):_this12.viewSettingsContainer.classList.add(\"d-none\");};this.commandsHeader.onclick=function(){_this12.commandsContainer.classList.contains(\"d-none\")?_this12.commandsContainer.classList.remove(\"d-none\"):_this12.commandsContainer.classList.add(\"d-none\");};this.streamingSettingsHeader.onclick=function(){_this12.streamingSettingsContainer.classList.contains(\"d-none\")?_this12.streamingSettingsContainer.classList.remove(\"d-none\"):_this12.streamingSettingsContainer.classList.add(\"d-none\");};this.statsHeader.onclick=function(){_this12.statsContainer.classList.contains(\"d-none\")?_this12.statsContainer.classList.remove(\"d-none\"):_this12.statsContainer.classList.add(\"d-none\");};this.latencyHeader.onclick=function(){_this12.latencyContainer.classList.contains(\"d-none\")?_this12.latencyContainer.classList.remove(\"d-none\"):_this12.latencyContainer.classList.add(\"d-none\");};// Reveal all the container\nthis.viewSettingsContainer.classList.remove(\"d-none\");this.commandsContainer.classList.remove(\"d-none\");this.streamingSettingsContainer.classList.remove(\"d-none\");this.statsContainer.classList.remove(\"d-none\");this.videoStartTime=Date.now();}/**\r\n\t * Extended from the base functionality; displays the error overlay and resets the buttons stream tools upon disconnect \r\n\t * @param eventText \r\n\t */},{key:\"onDisconnect\",value:function onDisconnect(eventText){// display the text overlay by calling its super method so it will use its default behavior first \n_get(_getPrototypeOf(NativeDOMDelegate.prototype),\"onDisconnect\",this).call(this,\"\".concat(eventText));// update all of the tools upon disconnect \nthis.onVideoEncoderAvgQP(0);// starting a latency check\ndocument.getElementById(\"btn-start-latency-test\").onclick=function(){};// Set up stream tools header functionality\nthis.viewSettingsHeader.onclick=function(){};this.commandsHeader.onclick=function(){};this.streamingSettingsHeader.onclick=function(){};this.statsHeader.onclick=function(){};this.latencyHeader.onclick=function(){};// Hide all the containers\nthis.viewSettingsContainer.classList.add(\"d-none\");this.commandsContainer.classList.add(\"d-none\");this.streamingSettingsContainer.classList.add(\"d-none\");this.statsContainer.classList.add(\"d-none\");}/**\r\n\t * `Takes the InitialSettings and wired to frontend\r\n\t * @param settings - Settings sent from the UE Instance`\r\n\t */},{key:\"onInitialSettings\",value:function onInitialSettings(settings){if(settings.Encoder){this.encoderMinQpText.value=settings.Encoder.MinQP.toString();this.encoderMaxQpText.value=settings.Encoder.MaxQP.toString();}if(settings.WebRTC){this.webRtcMinBitrateText.value=settings.WebRTC.MinBitrate.toString();this.webRtcMaxBitrateText.value=settings.WebRTC.MaxBitrate.toString();this.webRtcFpsText.value=settings.WebRTC.FPS.toString();}}/**\r\n\t* Used to handle the Video Stats from the Peer Connection Client\r\n\t* @param stats - Stats generate from the Peer Connection Client\r\n\t*/},{key:\"onVideoStats\",value:function onVideoStats(stats){var runTime=new Date(Date.now()-this.videoStartTime).toISOString().substr(11,8);var statsText=\"\";var inboundData=this.formatBytes(stats.inboundVideoStats.bytesReceived,2);// format numbering based on the browser language\nvar numberFormat=new Intl.NumberFormat(window.navigator.language,{maximumFractionDigits:0});// ensure that we have a currentRoundTripTime coming in from stats and format it if it's a number\nvar netRTT=stats.candidatePair.hasOwnProperty('currentRoundTripTime')&&stats.isNumber(stats.candidatePair.currentRoundTripTime)?numberFormat.format(stats.candidatePair.currentRoundTripTime*1000):'Can\\'t calculate';statsText+=\"<div>Duration: \".concat(runTime,\"</div>\");statsText+=\"<div>Received: \".concat(inboundData,\"</div>\");statsText+=\"<div>Packets Lost: \".concat(stats.inboundVideoStats.packetsLost,\"</div>\");statsText+=\"<div>Bitrate (kbps): \".concat(stats.inboundVideoStats.bitrate,\"</div>\");statsText+=\"<div>Video Resolution: \".concat(stats.inboundVideoStats.hasOwnProperty('frameWidth')&&stats.inboundVideoStats.frameWidth&&stats.inboundVideoStats.hasOwnProperty('frameHeight')&&stats.inboundVideoStats.frameHeight?stats.inboundVideoStats.frameWidth+'x'+stats.inboundVideoStats.frameHeight:'Chrome only',\"</div>\");statsText+=\"<div>Frames Decoded: \".concat(stats.inboundVideoStats.hasOwnProperty('framesDecoded')?numberFormat.format(stats.inboundVideoStats.framesDecoded):'Chrome only',\"</div>\");statsText+=\"<div>Packets Lost: \".concat(stats.inboundVideoStats.hasOwnProperty('packetsLost')?numberFormat.format(stats.inboundVideoStats.packetsLost):'Chrome only',\"</div>\");statsText+=\"<div>Framerate: \".concat(stats.inboundVideoStats.framerate,\"</div>\");statsText+=\"<div>Frames dropped: \".concat(stats.inboundVideoStats.framesDropped,\"</div>\");statsText+=\"<div>Net RTT (ms): \".concat(netRTT,\"</div>\");//statsText += `<div>Browser receive to composite (ms): ${stats.inboundVideoStats.receiveToCompositeMs}</div>`;\nstatsText+=\"<div>Video Quantization Parameter: \".concat(this.videoQpIndicator.videoEncoderAvgQP,\"</div>\");var statsDiv=document.getElementById(\"statisticsResult\");statsDiv.innerHTML=statsText;libspsfrontend.Logger.Log(libspsfrontend.Logger.GetStackTrace(),\"--------- Stats ---------\\n \".concat(stats,\"\\n------------------------\"),6);if(this.sendStatsToServer.checked===true){this.iWebRtcController.sendStatsToSignallingServer(stats);}}/**\r\n\t* formats Bytes coming in for video stats\r\n\t* @param bytes number to convert\r\n\t* @param decimals number of decimal places\r\n\t*/},{key:\"formatBytes\",value:function formatBytes(bytes,decimals){if(bytes===0){return\"0\";}var factor=1024;var dm=decimals<0?0:decimals;var sizes=['Bytes','KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];var i=Math.floor(Math.log(bytes)/Math.log(factor));return parseFloat((bytes/Math.pow(factor,i)).toFixed(dm))+' '+sizes[i];}/**\r\n\t* Handles the result of the UE Latency Test\r\n\t* @param latencyTimings - Latency Test Timings sent from the UE Instance \r\n\t*/},{key:\"onLatencyTestResult\",value:function onLatencyTestResult(latencyTimings){libspsfrontend.Logger.Log(libspsfrontend.Logger.GetStackTrace(),latencyTimings.toString(),6);var latencyStatsInnerHTML='';latencyStatsInnerHTML+=\"<div>Net latency RTT (ms): \"+latencyTimings.networkLatency+\"</div>\";latencyStatsInnerHTML+=\"<div>UE Encode (ms): \"+latencyTimings.EncodeMs+\"</div>\";latencyStatsInnerHTML+=\"<div>UE Capture (ms): \"+latencyTimings.CaptureToSendMs+\"</div>\";latencyStatsInnerHTML+=\"<div>Browser send latency (ms): \"+latencyTimings.browserSendLatency+\"</div>\";latencyStatsInnerHTML+=latencyTimings.frameDisplayDeltaTimeMs&&latencyTimings.browserReceiptTimeMs?\"<div>Browser receive latency (ms): \"+latencyTimings.frameDisplayDeltaTimeMs+\"</div>\":\"\";latencyStatsInnerHTML+=\"<div>Total latency (excluding browser) (ms): \"+latencyTimings.latencyExcludingDecode+\"</div>\";latencyStatsInnerHTML+=latencyTimings.endToEndLatency?\"<div>Total latency (ms): \"+latencyTimings.endToEndLatency+\"</div>\":\"\";this.latencyContainer.classList.remove(\"d-none\");document.getElementById(\"latencyStatsResults\").innerHTML=latencyStatsInnerHTML;}/**\r\n\t * Handles when the ownership flag is sent from the signaling server\r\n\t * @param hasQualityOwnership - flag if the user has quality ownership\r\n\t */},{key:\"onQualityControlOwnership\",value:function onQualityControlOwnership(hasQualityOwnership){this.qualityControlOwnershipCheckBox.checked=hasQualityOwnership;}/**\r\n\t  * Calls updateQpTooltip to update the QP colour light\r\n\t  * @param QP - The video encoder QP number needed to find the average\r\n\t  */},{key:\"onVideoEncoderAvgQP\",value:function onVideoEncoderAvgQP(QP){this.videoQpIndicator.updateQpTooltip(QP);}}]);return NativeDOMDelegate;}(libspsfrontend.DelegateBase);/**\r\n * Declare additions to global html objects that do not exist on the bases\r\n */","map":{"version":3,"names":["EventEmitter","libspsfrontend","OverlayBase","rootDiv","rootElement","textElement","_classCallCheck","appendChild","hide","_createClass","key","value","show","classList","remove","add","ActionOverlayBase","_OverlayBase","_inherits","_super","_createSuper","contentElement","contentElementSpanId","_this","call","eventEmitter","update","text","undefined","document","getElementById","innerHTML","onAction","callBack","on","activate","emit","AfkOverlayBase","_ActionOverlayBase","_super2","countDownSpanElementId","_this2","updateCountdown","countdown","toString","TextOverlayBase","_OverlayBase2","_super3","VideoQpIndicator","qualityStatusId","qualityTextId","outerId","middleId","innerId","dotId","videoEncoderAvgQP","qualityStatus","qualityText","outer","middle","inner","dot","statsText","color","orangeQP","redQP","blinkVideoQualityStatus","speed","_this3","iteration","opacity","tickID","setInterval","style","String","Math","abs","clearInterval","updateQpTooltip","QP","concat","fill","FullScreenLogic","_this4","isFullscreen","onclick","fullscreen","addEventListener","onFullscreenChange","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","element","fullscreenEnabled","webkitFullscreenEnabled","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","webkitEnterFullscreen","webkitIsFullScreen","mozFullScreen","minimize","maximize","display","transform","NativeDOMDelegate","_libspsfrontend$Deleg","_super4","config","_this5","latencyStartTime","videoStartTime","mobileUser","streamReady","iWebRtcController","showStats","videoQpIndicator","fullScreenLogic","settingsPanel","statsPanel","forceTurnToggle","enlargeDisplayToFillWindow","qualityControlOwnershipCheckBox","toggleMatchViewPortRes","controlSchemeToggle","controlSchemeToggleTitle","uiDescriptorText","encoderMinQpText","encoderMaxQpText","webRtcFpsText","webRtcMinBitrateText","webRtcMaxBitrateText","sendStatsToServer","preStreamContainer","viewSettingsHeader","commandsHeader","streamingSettingsHeader","statsHeader","latencyHeader","viewSettingsContainer","commandsContainer","streamingSettingsContainer","statsContainer","latencyContainer","appName","buildDisconnectOverlay","buildConnectOverlay","buildPlayOverlay","buildAfkOverlay","buildInfoOverlay","buildErrorOverlay","ConfigureButtons","updateVideoStreamSize","x","y","ueDescriptorUi","sendUpdateVideoStreamSize","write","file","message","data","filename","fetch","method","headers","body","JSON","stringify","then","response","console","log","status","json","catch","error","_this6","disconnectOverlayHtml","createElement","id","className","disconnectOverlayEvent","onDisconnectionAction","self","onOverlayClick","event","disconnectOverlayHtmlInnerContainer","disconnectOverlayInnerSpan","restartSvg","createElementNS","setAttribute","restartSvgPathArrow","restartSvgPathCircle","disconnectOverlay","playerElement","_this7","connectOverlayHtml","connectOverlayEvent","onConnectAction","connectOverlayHtmlInner","connectOverlay","_this8","playOverlayHtml","playOverlayEvent","onPlayAction","playOverlayHtmlInner","playOverlay","_this9","afkOverlayHtml","afkOverlayEvent","onAfkAction","afkOverlayHtmlInner","afkOverlay","infoOverlayHtml","infoOverlayHtmlInner","infoOverlay","errorOverlayHtml","errorOverlayHtmlInner","errorOverlay","onStreamLoading","spinnerSpan","spinnerDiv","showTextOverlay","outerHTML","zoomIn","scaleFactor","currentScale","parseFloat","replace","newScale","onInstanceStateChange","instanceState","instanceStateMessage","isInstancePending","isError","state","InstanceState","UNALLOCATED","details","FAILED","PENDING","READY","showErrorOverlay","preExistingPendingMessage","textDiv","wrapperDiv","textSpan","openFullscreen","documentElement","onAuthenticationResponse","authResponse","outcome","MessageAuthResponseOutcomeType","AUTHENTICATED","INVALID_TOKEN","REDIRECT","redirect","ERROR","_this10","settingsClicked","statsClicked","setUpToggleWithUrlParams","setUpControlSchemeTypeToggle","toggle","restartStreamAutomaticity","Logger","Log","GetStackTrace","encode","MinQP","Number","MaxQP","webRtcSettings","FPS","MinBitrate","MaxBitrate","sendEncoderSettings","sendWebRtcSettings","sendUeUiDescriptor","sendShowFps","onchange","resizePlayerStyle","setEnlargeToFillDisplay","checked","matchViewportResolution","sendRequestQualityControlOwnership","contains","toggleElement","_this11","controlScheme","ControlSchemeType","LockedMouse","HoveringMouse","activateRegisterMouse","urlParameterKey","URLSearchParams","window","location","search","has","urlParams","set","delete","history","replaceState","pathname","_IsLinkSharingEnabled","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","stop","IsLinkSharingEnabled","apply","arguments","onVideoInitialised","_this12","sendLatencyTest","Date","now","onDisconnect","eventText","_get","_getPrototypeOf","prototype","onVideoEncoderAvgQP","onInitialSettings","settings","Encoder","WebRTC","onVideoStats","stats","runTime","toISOString","substr","inboundData","formatBytes","inboundVideoStats","bytesReceived","numberFormat","Intl","NumberFormat","navigator","language","maximumFractionDigits","netRTT","candidatePair","hasOwnProperty","isNumber","currentRoundTripTime","format","packetsLost","bitrate","frameWidth","frameHeight","framesDecoded","framerate","framesDropped","statsDiv","sendStatsToSignallingServer","bytes","decimals","factor","dm","sizes","i","floor","pow","toFixed","onLatencyTestResult","latencyTimings","latencyStatsInnerHTML","networkLatency","EncodeMs","CaptureToSendMs","browserSendLatency","frameDisplayDeltaTimeMs","browserReceiptTimeMs","latencyExcludingDecode","endToEndLatency","onQualityControlOwnership","hasQualityOwnership","DelegateBase"],"sources":["C:/Users/employee/Palatial-Web-Loading/src/NativeDOMDelegate.ts"],"sourcesContent":["import './assets/css/player.css';\r\nimport { EventEmitter } from \"events\";\r\nimport * as libspsfrontend from 'backend-dom-components'\r\n\r\ndeclare var WEBSOCKET_URL: string;\r\n\r\n/**\r\n * Class for the base overlay structure \r\n */\r\nexport class OverlayBase implements libspsfrontend.IOverlay {\r\n\tprotected rootElement: HTMLDivElement;\r\n\tprotected rootDiv: HTMLDivElement;\r\n\tpublic textElement: HTMLDivElement;\r\n\r\n\t/**\r\n\t * Construct an overlay \r\n\t * @param rootDiv the root element this overlay will be inserted into \r\n\t * @param rootElement the root element that is the overlay\r\n\t */\r\n\tprotected constructor(rootDiv: HTMLDivElement, rootElement: HTMLDivElement, textElement: HTMLDivElement) {\r\n\t\tthis.rootDiv = rootDiv;\r\n\t\tthis.rootElement = rootElement;\r\n\t\tthis.textElement = textElement;\r\n\t\tthis.rootElement.appendChild(this.textElement);\r\n\t\tthis.hide();\r\n\t\tthis.rootDiv.appendChild(this.rootElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Show the overlay \r\n\t */\r\n\tpublic show(): void {\r\n\t\tthis.rootElement.classList.remove(\"hiddenState\");\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the overlay\r\n\t */\r\n\tpublic hide(): void {\r\n\t\tthis.rootElement.classList.add(\"hiddenState\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Class for the base action overlay structure \r\n */\r\nexport class ActionOverlayBase extends OverlayBase implements libspsfrontend.IActionOverlay {\r\n\teventEmitter: EventEmitter;\r\n\tcontentElementSpanId: string;\r\n\r\n\t/**\r\n\t * Construct an action overlay \r\n\t * @param rootDiv the root element this overlay will be inserted into \r\n\t * @param rootElement the root element that is the overlay\r\n\t * @param contentElement an element that contains text for the action overlay \r\n\t */\r\n\tpublic constructor(rootDiv: HTMLDivElement, rootElement: HTMLDivElement, contentElement: HTMLDivElement, contentElementSpanId?: string) {\r\n\t\tsuper(rootDiv, rootElement, contentElement);\r\n\t\tthis.eventEmitter = new EventEmitter();\r\n\t\tthis.contentElementSpanId = contentElementSpanId;\r\n\t}\r\n\r\n\t/**\r\n\t * Update the text overlays inner text \r\n\t * @param text the update text to be inserted into the overlay \r\n\t */\r\n\tpublic update(text: string): void {\r\n\t\tif ((text != null || text != undefined) && (this.contentElementSpanId != null || this.contentElementSpanId != undefined)) {\r\n\t\t\tdocument.getElementById(this.contentElementSpanId).innerHTML = text;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set a method as an event emitter callback \r\n\t * @param callBack the method that is to be called when the event is emitted \r\n\t */\r\n\tonAction(callBack: (...args: any[]) => void) {\r\n\t\tthis.eventEmitter.on(\"action\", callBack);\r\n\t}\r\n\r\n\t/**\r\n\t * Activate an event that is attached to the event emitter \r\n\t */\r\n\tactivate() {\r\n\t\tthis.eventEmitter.emit(\"action\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Class for the afk overlay base \r\n */\r\nexport class AfkOverlayBase extends ActionOverlayBase implements libspsfrontend.IAfkOverlay {\r\n\tprivate countDownSpanElementId: string;\r\n\r\n\t/**\r\n\t * Construct an Afk overlay \r\n\t * @param rootDiv the root element this overlay will be inserted into \r\n\t * @param rootElement the root element that is the overlay\r\n\t * @param textElement an element that contains text for the action overlay  \r\n\t * @param countDownSpanElementId the id of the span that holds the countdown element \r\n\t */\r\n\tpublic constructor(rootDiv: HTMLDivElement, rootElement: HTMLDivElement, textElement: HTMLDivElement, countDownSpanElementId: string) {\r\n\t\tsuper(rootDiv, rootElement, textElement);\r\n\t\tthis.countDownSpanElementId = countDownSpanElementId;\r\n\t}\r\n\r\n\t/**\r\n\t * Update the count down spans number for the overlay \r\n\t * @param countdown the count down number to be inserted into the span for updating\r\n\t */\r\n\tpublic updateCountdown(countdown: number): void {\r\n\t\tdocument.getElementById(this.countDownSpanElementId).innerHTML = countdown.toString();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Class for the text overlay base \r\n */\r\nexport class TextOverlayBase extends OverlayBase implements libspsfrontend.ITextOverlay {\r\n\r\n\t/**\r\n\t * Construct a text overlay \r\n\t * @param rootDiv the root element this overlay will be inserted into \r\n\t * @param rootElement the root element that is the overlay\r\n\t * @param textElement an element that contains text for the action overlay  \r\n\t */\r\n\tpublic constructor(rootDiv: HTMLDivElement, rootElement: HTMLDivElement, textElement: HTMLDivElement) {\r\n\t\tsuper(rootDiv, rootElement, textElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Update the text overlays inner text \r\n\t * @param text the update text to be inserted into the overlay \r\n\t */\r\n\tpublic update(text: string): void {\r\n\t\tif (text != null || text != undefined) {\r\n\t\t\tthis.textElement.innerHTML = text;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Class for the VideoQp indicator\r\n */\r\nexport class VideoQpIndicator {\r\n\r\n\tvideoEncoderAvgQP: number = -1;\r\n\r\n\t// the icon itself\r\n\tqualityStatus: SVGElement; // = document.getElementById(\"connectionStrength\");\r\n\r\n\t// the text that displays under the icon\r\n\tqualityText: HTMLSpanElement; // = document.getElementById(\"qualityText\");\r\n\r\n\t// svg paths\r\n\touter: any; //= document.getElementById(\"outer\");\r\n\tmiddle: any; //= document.getElementById(\"middle\");\r\n\tinner: any; // = document.getElementById(\"inner\");\r\n\tdot: any; // = document.getElementById(\"dot\");\r\n\r\n\t// non html elements \r\n\tstatsText: string = \"\";\r\n\tcolor: string = \"\";\r\n\r\n\t// qp colours \r\n\treadonly orangeQP = 26;\r\n\treadonly redQP = 35;\r\n\r\n\t/**\r\n\t * construct a VideoQpIndicator object\r\n\t * @param qualityStatusId the html id of the qualityStatus element\r\n\t * @param qualityTextId the html id of the qualityText element\r\n\t * @param outerId the html id of the outer element\r\n\t * @param middleId the html id of the middle element\r\n\t * @param innerId the html id of the inner element\r\n\t * @param dotId the html id of the dot element\r\n\t */\r\n\tconstructor(qualityStatusId: string, qualityTextId: string, outerId: string, middleId: string, innerId: string, dotId: string) {\r\n\t\tthis.qualityStatus = document.getElementById(qualityStatusId) as any;\r\n\t\tthis.qualityText = document.getElementById(qualityTextId) as any;\r\n\t\tthis.outer = document.getElementById(outerId) as any;\r\n\t\tthis.middle = document.getElementById(middleId) as any;\r\n\t\tthis.inner = document.getElementById(innerId) as any;\r\n\t\tthis.dot = document.getElementById(dotId) as any;\r\n\t}\r\n\r\n\t/**\r\n\t * used to set the speed of the status light\r\n\t * @param speed - Set the speed of the blink if the status light higher the speed the faster the blink\r\n\t */\r\n\tblinkVideoQualityStatus(speed: number) {\r\n\t\tlet iteration = speed;\r\n\t\tlet opacity = 1;\r\n\t\tlet tickID = setInterval(() => {\r\n\t\t\topacity -= 0.1;\r\n\t\t\tthis.qualityText.style.opacity = String(Math.abs((opacity - 0.5) * 2));\r\n\t\t\tif (opacity <= 0.1) {\r\n\t\t\t\tif (--iteration == 0) {\r\n\t\t\t\t\tclearInterval(tickID);\r\n\t\t\t\t} else {\r\n\t\t\t\t\topacity = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, 100 / speed);\r\n\t}\r\n\r\n\t/**\r\n\t  * updates the QP tooltip by converting the Video Encoder QP to a colour light\r\n\t  * @param QP - The video encoder QP number needed to find the average\r\n\t  */\r\n\tupdateQpTooltip(QP: number) {\r\n\t\tthis.videoEncoderAvgQP = QP;\r\n\t\tif (QP > this.redQP) {\r\n\t\t\tthis.color = \"red\";\r\n\t\t\tthis.blinkVideoQualityStatus(2);\r\n\t\t\tthis.statsText = `<div style=\"color: ${this.color}\">Poor encoding quality</div>`;\r\n\t\t\tthis.outer.style.fill = \"#3c3b40\";\r\n\t\t\tthis.middle.style.fill = \"#3c3b40\";\r\n\t\t\tthis.inner.style.fill = this.color;\r\n\t\t\tthis.dot.style.fill = this.color;\r\n\t\t} else if (QP > this.orangeQP) {\r\n\t\t\tthis.color = \"orange\";\r\n\t\t\tthis.blinkVideoQualityStatus(1);\r\n\t\t\tthis.statsText = `<div style=\"color: ${this.color}\">Blocky encoding quality</div>`;\r\n\t\t\tthis.outer.style.fill = \"#3c3b40\";\r\n\t\t\tthis.middle.style.fill = this.color;\r\n\t\t\tthis.inner.style.fill = this.color;\r\n\t\t\tthis.dot.style.fill = this.color;\r\n\t\t} else if (QP <= 0) {\r\n\t\t\tthis.color = \"#b0b0b0\";\r\n\t\t\tthis.outer.style.fill = \"#3c3b40\";\r\n\t\t\tthis.middle.style.fill = \"#3c3b40\";\r\n\t\t\tthis.inner.style.fill = \"#3c3b40\";\r\n\t\t\tthis.dot.style.fill = \"#3c3b40\";\r\n\t\t\tthis.statsText = `<div style=\"color: ${this.color}\">Not connected</div>`;\r\n\t\t} else {\r\n\t\t\tthis.color = \"lime\";\r\n\t\t\tthis.qualityStatus.style.opacity = '1';\r\n\t\t\tthis.statsText = `<div style=\"color: ${this.color}\">Clear encoding quality</div>`;\r\n\t\t\tthis.outer.style.fill = this.color;\r\n\t\t\tthis.middle.style.fill = this.color;\r\n\t\t\tthis.inner.style.fill = this.color;\r\n\t\t\tthis.dot.style.fill = this.color;\r\n\t\t}\r\n\t\tthis.qualityText.innerHTML = this.statsText;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Class for handling fullscreen logic\r\n */\r\nexport class FullScreenLogic {\r\n\tisFullscreen: boolean = false;\r\n\r\n\t/**\r\n\t * Construct a FullScreenLogic object\r\n\t */\r\n\tconstructor() {\r\n\t\tdocument.getElementById(\"fullscreen-btn\").onclick = () => this.fullscreen();\r\n\r\n\t\t// set up the full screen events\r\n\t\tdocument.addEventListener('webkitfullscreenchange', () => this.onFullscreenChange(), false);\r\n\t\tdocument.addEventListener('mozfullscreenchange', () => this.onFullscreenChange(), false);\r\n\t\tdocument.addEventListener('fullscreenchange', () => this.onFullscreenChange(), false);\r\n\t\tdocument.addEventListener('MSFullscreenChange', () => this.onFullscreenChange(), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the document fullscreen \r\n\t * @returns \r\n\t */\r\n\tfullscreen() {\r\n\t\t// if already full screen; exit\r\n\t\t// else go fullscreen\r\n\t\tif (\r\n\t\t\tdocument.fullscreenElement ||\r\n\t\t\tdocument.webkitFullscreenElement ||\r\n\t\t\tdocument.mozFullScreenElement ||\r\n\t\t\tdocument.msFullscreenElement\r\n\t\t) {\r\n\t\t\tif (document.exitFullscreen) {\r\n\t\t\t\tdocument.exitFullscreen();\r\n\t\t\t} else if (document.mozCancelFullScreen) {\r\n\t\t\t\tdocument.mozCancelFullScreen();\r\n\t\t\t} else if (document.webkitExitFullscreen) {\r\n\t\t\t\tdocument.webkitExitFullscreen();\r\n\t\t\t} else if (document.msExitFullscreen) {\r\n\t\t\t\tdocument.msExitFullscreen();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet element: any;\r\n\t\t\t//HTML elements controls\r\n\t\t\tif (!(document.fullscreenEnabled || document.webkitFullscreenEnabled)) {\r\n\t\t\t\telement = document.getElementById(\"streamingVideo\") as any;\r\n\t\t\t} else {\r\n\t\t\t\telement = document.getElementById(\"playerUI\") as any;\r\n\t\t\t}\r\n\t\t\tif (!element) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (element.requestFullscreen) {\r\n\t\t\t\telement.requestFullscreen();\r\n\t\t\t} else if (element.mozRequestFullScreen) {\r\n\t\t\t\telement.mozRequestFullScreen();\r\n\t\t\t} else if (element.webkitRequestFullscreen) {\r\n\t\t\t\telement.webkitRequestFullscreen((<any>Element).ALLOW_KEYBOARD_INPUT);\r\n\t\t\t} else if (element.msRequestFullscreen) {\r\n\t\t\t\telement.msRequestFullscreen();\r\n\t\t\t} else if (element.webkitEnterFullscreen) {\r\n\t\t\t\telement.webkitEnterFullscreen(); //for iphone this code worked\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.onFullscreenChange();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the fullscreen button on change\r\n\t */\r\n\tonFullscreenChange() {\r\n\t\tthis.isFullscreen = (document.webkitIsFullScreen\r\n\t\t\t|| document.mozFullScreen\r\n\t\t\t|| (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n\t\t\t|| (document.fullscreenElement && document.fullscreenElement !== null));\r\n\r\n\t\tlet minimize = document.getElementById('minimizeIcon');\r\n\t\tlet maximize = document.getElementById('maximizeIcon');\r\n\t\tif (minimize && maximize) {\r\n\t\t\tif (this.isFullscreen) {\r\n\t\t\t\tminimize.style.display = 'inline';\r\n\t\t\t\t//ios disappearing svg fix\r\n\t\t\t\tminimize.style.transform = 'translate(0, 0)';\r\n\t\t\t\tmaximize.style.display = 'none';\r\n\t\t\t} else {\r\n\t\t\t\tminimize.style.display = 'none';\r\n\t\t\t\tmaximize.style.display = 'inline';\r\n\t\t\t\t//ios disappearing svg fix\r\n\t\t\t\tmaximize.style.transform = 'translate(0, 0)';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport class NativeDOMDelegate extends libspsfrontend.DelegateBase {\r\n\tconfig: libspsfrontend.Config;\r\n\tlatencyStartTime: number;\r\n\tvideoStartTime: number;\r\n\tmobileUser: boolean;\r\n\tstreamReady: boolean;\r\n\r\n\t// instantiate the WebRtcPlayerControllers interface var \r\n\tiWebRtcController: libspsfrontend.IWebRtcPlayerController;\r\n\r\n\tshowStats: boolean;\r\n\r\n\t// HTML Elements that are used multiple times\r\n\r\n\t// Global\r\n\tvideoQpIndicator: VideoQpIndicator;\r\n\tfullScreenLogic: FullScreenLogic;\r\n\r\n\t// settings and stats panels\r\n\tsettingsPanel = document.getElementById('settings-panel') as HTMLDivElement;\r\n\tstatsPanel = document.getElementById('stats-panel') as HTMLDivElement;\r\n\r\n\t// Pre Stream options\r\n\tforceTurnToggle = document.getElementById(\"force-turn-tgl\") as HTMLInputElement;\r\n\r\n\t// Viewing\r\n\tenlargeDisplayToFillWindow = document.getElementById(\"enlarge-display-to-fill-window-tgl\") as HTMLInputElement;\r\n\tqualityControlOwnershipCheckBox = document.getElementById(\"quality-control-ownership-tgl\") as HTMLInputElement;\r\n\ttoggleMatchViewPortRes = document.getElementById(\"match-viewport-res-tgl\") as HTMLInputElement;\r\n\tcontrolSchemeToggle = document.getElementById(\"control-scheme-tgl\") as HTMLInputElement;\r\n\tcontrolSchemeToggleTitle = document.getElementById(\"control-scheme-title\") as HTMLDivElement;\r\n\r\n\t// Commands\r\n\tuiDescriptorText = document.getElementById(\"ui-descriptor-text\") as HTMLInputElement;\r\n\r\n\t// Settings\r\n\tencoderMinQpText = document.getElementById(\"encoder-min-qp-text\") as HTMLInputElement;\r\n\tencoderMaxQpText = document.getElementById(\"encoder-max-qp-text\") as HTMLInputElement;\r\n\twebRtcFpsText = document.getElementById(\"webrtc-fps-text\") as HTMLInputElement;\r\n\twebRtcMinBitrateText = document.getElementById(\"webrtc-min-bitrate-text\") as HTMLInputElement;\r\n\twebRtcMaxBitrateText = document.getElementById(\"webrtc-max-bitrate-text\") as HTMLInputElement;\r\n\r\n\t// Statistics\r\n\tsendStatsToServer = document.getElementById(\"send-stats-tgl\") as HTMLInputElement;\r\n\r\n\t// Containers Headers\r\n\tpreStreamContainer = document.getElementById(\"preStreamOptionsHeader\") as HTMLDivElement;\r\n\tviewSettingsHeader = document.getElementById(\"viewSettingsHeader\") as HTMLDivElement;\r\n\tcommandsHeader = document.getElementById(\"commandsHeader\") as HTMLDivElement;\r\n\tstreamingSettingsHeader = document.getElementById(\"streamingSettingsHeader\") as HTMLDivElement;\r\n\tstatsHeader = document.getElementById(\"statisticsHeader\") as HTMLDivElement;\r\n\tlatencyHeader = document.getElementById(\"latencyTestHeader\") as HTMLDivElement;\r\n\r\n\t// Containers\r\n\tviewSettingsContainer = document.getElementById(\"viewSettingsContainer\") as HTMLDivElement;\r\n\tcommandsContainer = document.getElementById(\"commandsContainer\") as HTMLDivElement;\r\n\tstreamingSettingsContainer = document.getElementById(\"streamingSettingsContainer\") as HTMLDivElement;\r\n\tstatsContainer = document.getElementById(\"statisticsContainer\") as HTMLDivElement;\r\n\tlatencyContainer = document.getElementById(\"latencyTestContainer\") as HTMLDivElement;\r\n\r\n\tappName: string;\r\n\r\n\tconstructor(config: libspsfrontend.Config) {\r\n\t\tsuper(config);\r\n\t\tthis.config = config;\r\n\t\tthis.showStats = true;\r\n\t\tthis.videoQpIndicator = new VideoQpIndicator(\"connectionStrength\", \"qualityText\", \"outer\", \"middle\", \"inner\", \"dot\");\r\n\t\tthis.fullScreenLogic = new FullScreenLogic();\r\n\t\tthis.streamReady = false;\r\n\r\n\t\t// build all of the overlays \r\n\t\tthis.buildDisconnectOverlay();\r\n\t\tthis.buildConnectOverlay();\r\n\t\tthis.buildPlayOverlay();\r\n\t\tthis.buildAfkOverlay();\r\n\t\tthis.buildInfoOverlay();\r\n\t\tthis.buildErrorOverlay();\r\n\r\n\t\t// configure all buttons \r\n\t\tthis.ConfigureButtons();\r\n\t}\r\n\r\n\tupdateVideoStreamSize(x: number, y: number) {\r\n\t\t(<libspsfrontend.webRtcPlayerController>this.iWebRtcController).ueDescriptorUi.sendUpdateVideoStreamSize(x, y);\r\n\t}\r\n\r\n        write(file: string, message: string) {\r\n            const data = {\r\n                filename: file,\r\n                data: message\r\n            };\r\n\r\n            fetch('https://prophet.palatialxr.com:3001/save', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                })\r\n                .then(response => {\r\n                    console.log(\r\n                        `statusCode: ${response.status}`\r\n                        );\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    console.log(data);\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n\t/**\r\n\t * Builds the disconnect overlay \r\n\t */\r\n\tbuildDisconnectOverlay() {\r\n\t\t// build the overlay base div \r\n\t\tlet disconnectOverlayHtml = document.createElement('div');\r\n\t\tdisconnectOverlayHtml.id = \"disconnectOverlay\";\r\n\t\tdisconnectOverlayHtml.className = \"clickableState\";\r\n\r\n\t\t// set the event Listener\r\n\t\tlet disconnectOverlayEvent: EventListener = () => this.onDisconnectionAction();\r\n\t\tconst self = this;\r\n\r\n\t\t// add the new event listener \r\n\t\tdisconnectOverlayHtml.addEventListener('click', function onOverlayClick(event: Event) {\t\t\t\r\n\t\t\tdisconnectOverlayEvent(event);\r\n\t\t\t//whuzz\r\n\t\t});\r\n\r\n\t\t// build the inner html container \r\n\t\tlet disconnectOverlayHtmlInnerContainer = document.createElement('div');\r\n\t\tdisconnectOverlayHtmlInnerContainer.id = 'disconnectButton';\r\n\r\n\t\t// build the span that holds error text\r\n\t\tlet disconnectOverlayInnerSpan = document.createElement('span');\r\n\t\tdisconnectOverlayInnerSpan.id = 'disconnectText';\r\n\t\tdisconnectOverlayInnerSpan.innerHTML = 'Click To Restart';\r\n\r\n\t\t// build the image element that holds the reconnect element\r\n\t\tlet restartSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n\t\trestartSvg.setAttribute('width', \"40\");\r\n\t\trestartSvg.setAttribute('height', \"40\");\r\n\t\trestartSvg.setAttribute('fill', \"currentColor\");\r\n\t\trestartSvg.setAttribute('class', \"bi bi-arrow-counterclockwise m-2\");\r\n\t\trestartSvg.setAttribute('viewBox', \"0 0 16 16\");\r\n\r\n\t\t// build the arrow path \r\n\t\tlet restartSvgPathArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n\t\trestartSvgPathArrow.setAttribute('fill-rule', \"evenodd\");\r\n\t\trestartSvgPathArrow.setAttribute('d', \"M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z\");\r\n\r\n\t\t// build the circle path\r\n\t\tlet restartSvgPathCircle = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n\t\trestartSvgPathCircle.setAttribute('d', \"M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z\");\r\n\r\n\t\t// bring it all together\r\n\t\trestartSvg.appendChild(restartSvgPathArrow);\r\n\t\trestartSvg.appendChild(restartSvgPathCircle);\r\n\r\n\t\t// append the span and images to the content container \r\n\t\tdisconnectOverlayHtmlInnerContainer.appendChild(disconnectOverlayInnerSpan);\r\n\t\tdisconnectOverlayHtmlInnerContainer.appendChild(restartSvg);\r\n\r\n\t\t// instantiate the overlay\r\n\t\tthis.disconnectOverlay = new ActionOverlayBase(this.config.playerElement, disconnectOverlayHtml, disconnectOverlayHtmlInnerContainer, \"disconnectText\");\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the connect overlay \r\n\t */\r\n\tbuildConnectOverlay() {\r\n\t\t// build the overlay base div \r\n\t\tlet connectOverlayHtml = document.createElement('div');\r\n\t\tconnectOverlayHtml.id = \"connectOverlay\";\r\n\t\tconnectOverlayHtml.className = \"clickableState\";\r\n\r\n\t\t// set the event Listener\r\n\t\tlet connectOverlayEvent: EventListener = () => this.onConnectAction();\r\n\r\n\t\t// add the new event listener \r\n\t\tconnectOverlayHtml.addEventListener('click', function onOverlayClick(event: Event) {\r\n\t\t\tconnectOverlayEvent(event);\r\n\t\t});\r\n\r\n\t\t// build the inner html \r\n\t\tlet connectOverlayHtmlInner = document.createElement('div');\r\n\t\tconnectOverlayHtmlInner.id = 'connectButton';\r\n\t\tconnectOverlayHtmlInner.innerHTML = 'Click to start';\r\n\r\n\t\t// instantiate the overlay\r\n\t\tthis.connectOverlay = new ActionOverlayBase(this.config.playerElement, connectOverlayHtml, connectOverlayHtmlInner);\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the play overlay \r\n\t */\r\n\tbuildPlayOverlay() {\r\n\t\t// build the overlay base div \r\n\t\tlet playOverlayHtml = document.createElement('div');\r\n\t\t//playOverlayHtml.id = \"startText\";\r\n\t\t//playOverlayHtml.classList.add(\"clickableState\", \"loadingText\");\r\n\r\n\t\t// set the event Listener\r\n                let playOverlayEvent: EventListener = () => this.onPlayAction();\t\r\n\r\n                // add the new event listener\r\n                /*playOverlayHtml.addEventListener('click', function onOverlayClick(event: Event) {\r\n                        playOverlayEvent(event);\r\n                        document.getElementById('container').style.display = 'none';\r\n                        document.body.style.cursor = 'none';\r\n                        openFullscreen();\r\n                });*/\r\n\r\n\t\t// build the inner html \r\n\t\tlet playOverlayHtmlInner = document.createElement('div');\r\n\t\t//playOverlayHtmlInner.className = \"disconnectText\";\r\n\t\t//playOverlayHtmlInner.innerHTML = \"Click to start\";\r\n\t\t\r\n\t\t// instantiate the overlay\r\n\t\tthis.playOverlay = new ActionOverlayBase(this.config.playerElement, playOverlayHtml, playOverlayHtmlInner);\r\n\t}\r\n\t/**\r\n\t * Builds the Afk overlay \r\n\t */\r\n\tbuildAfkOverlay() {\r\n\t\t// build the overlay base div \r\n\t\tlet afkOverlayHtml = document.createElement('div');\r\n\t\tafkOverlayHtml.id = \"afkOverlay\";\r\n\t\tafkOverlayHtml.className = \"clickableState\";\r\n\r\n\t\tlet afkOverlayEvent: EventListener = () => this.onAfkAction();\r\n\r\n\t\tafkOverlayHtml.addEventListener('click', function onOverlayClick(event: Event) {\r\n\t\t\tafkOverlayEvent(event);\r\n\t\t});\r\n\r\n\t\t// build the inner html\r\n\t\tlet afkOverlayHtmlInner = document.createElement('div');\r\n\t\tafkOverlayHtmlInner.id = 'afkOverlayInner';\r\n\t\tafkOverlayHtmlInner.innerHTML = '<center>No activity detected<br>Disconnecting in <span id=\"afkCountDownNumber\"></span> seconds<br>Click to continue<br></center>'\r\n\r\n\t\t// instantiate the overlay\r\n\t\tthis.afkOverlay = new AfkOverlayBase(this.config.playerElement, afkOverlayHtml, afkOverlayHtmlInner, \"afkCountDownNumber\");\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the info overlay \r\n\t */\r\n\tbuildInfoOverlay() {\r\n\t\t// build the overlay base div \r\n\t\tlet infoOverlayHtml = document.createElement('div');\r\n\t\tinfoOverlayHtml.id = \"infoOverlay\";\r\n\t\tinfoOverlayHtml.className = \"textDisplayState\";\r\n\r\n\t\t// build the inner html\r\n\t\tlet infoOverlayHtmlInner = document.createElement('div');\r\n\t\tinfoOverlayHtmlInner.id = 'messageOverlayInner';\r\n\r\n\t\t// instantiate the overlay\r\n\t\tthis.infoOverlay = new TextOverlayBase(this.config.playerElement, infoOverlayHtml, infoOverlayHtmlInner);\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the error overlay \r\n\t */\r\n\tbuildErrorOverlay() {\r\n\t\t// build the overlay base div \r\n\t\tlet errorOverlayHtml = document.createElement('div');\r\n\t\terrorOverlayHtml.id = \"errorOverlay\";\r\n\t\terrorOverlayHtml.className = \"textDisplayState\";\r\n\r\n\t\t// build the inner html\r\n\t\tlet errorOverlayHtmlInner = document.createElement('div');\r\n\t\terrorOverlayHtmlInner.id = 'errorOverlayInner';\r\n\t\terrorOverlayHtmlInner.classList.add(\".text-danger\");\r\n\r\n\t\t// instantiate the overlay\r\n\t\tthis.errorOverlay = new TextOverlayBase(this.config.playerElement, errorOverlayHtml, errorOverlayHtmlInner);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows a text overlay to alert the user the stream is currently loading\r\n\t */\r\n\tonStreamLoading() {\r\n\t\t// build the spinner span\r\n\t\tvar spinnerSpan: HTMLSpanElement = document.createElement('span');\r\n\t\tspinnerSpan.className = \"visually-hidden\"\r\n\t\tspinnerSpan.innerHTML = \"Loading\"\r\n\r\n\t\t// build the spinner div\r\n\t\tvar spinnerDiv: HTMLDivElement = document.createElement('div');\r\n\t\tspinnerDiv.id = \"loading-spinner\"\r\n\t\tspinnerDiv.className = \"spinner-border ms-2\"\r\n\t\tspinnerDiv.setAttribute(\"role\", \"status\");\r\n\r\n\t\t// append the spinner to the element\r\n\t\tspinnerDiv.appendChild(spinnerSpan);\r\n\t\tthis.showTextOverlay(\"Loading Stream \" + spinnerDiv.outerHTML);\r\n\t}\r\n\r\n        zoomIn() {\r\n            const scaleFactor = 1.2;\r\n            const currentScale = parseFloat(document.body.style.transform.replace('scale(', '').replace(')', ''));\r\n            const newScale = currentScale ? currentScale * scaleFactor : scaleFactor;\r\n            document.body.style.transform = `scale(${newScale})`;\r\n        }\r\n\r\n\t/**\r\n\t* Set up functionality to happen when an instance state change occurs and updates the info overlay with the response\r\n\t* @param instanceState - the message instance state \r\n\t*/\r\n        onInstanceStateChange(instanceState: libspsfrontend.MessageInstanceState) {\r\n\t\tlet instanceStateMessage = \"\";\r\n\t\tlet isInstancePending = false;\r\n\t\tlet isError = false;\r\n\r\n\t\t// get the response type\r\n\t\tswitch (instanceState.state) {\r\n\t\t\tcase libspsfrontend.InstanceState.UNALLOCATED:\r\n\t\t\t\tinstanceStateMessage = \"Instance Unallocated: \" + instanceState.details;\r\n\t\t\t\tbreak;\r\n\t\t\tcase libspsfrontend.InstanceState.FAILED:\r\n\t\t\t\tinstanceStateMessage = \"UE Instance Failed: \" + instanceState.details;\r\n\t\t\t\tisError = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase libspsfrontend.InstanceState.PENDING:\r\n\t\t\t\tisInstancePending = true;\r\n\t\t\t\tif (instanceState.details == undefined || instanceState.details == null) {\r\n\t\t\t\t\tinstanceStateMessage = \"Your application is pending\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstanceStateMessage = instanceState.details;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase libspsfrontend.InstanceState.READY:\r\n\t\t\t\tif (instanceState.details == undefined || instanceState.details == null) {\r\n\t\t\t\t\tinstanceStateMessage = \"Instance is Ready\";\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstanceStateMessage = \"Instance is Ready: \" + instanceState.details;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tinstanceStateMessage = \"Unhandled Instance State\" + instanceState.state + \" \" + instanceState.details;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (isError) {\r\n\t\t\tthis.showErrorOverlay(instanceStateMessage);\r\n\t\t} else if (isInstancePending) {\r\n\t\t\t//check if there is already and instance pending if so return \r\n\t\t\tlet preExistingPendingMessage = document.getElementById('loading-spinner') as HTMLDivElement;\r\n\t\t\tif (preExistingPendingMessage) {\r\n\r\n\t\t\t\t// only update our text div\r\n\t\t\t\tlet textDiv = document.getElementById(\"text-\"+instanceState.id) as HTMLSpanElement;\r\n\t\t\t\ttextDiv.innerHTML = instanceStateMessage;\r\n\t\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// build a wrapper to hold our text and our spinner\r\n\t\t\tvar wrapperDiv: HTMLDivElement = document.createElement('div');\r\n\r\n\t\t\t// build a text div to hold our text message\r\n\t\t\tvar textSpan: HTMLSpanElement = document.createElement('span');\r\n\t\t\ttextSpan.id = \"text-\" + instanceState.id\r\n\t\t\ttextSpan.innerHTML = instanceStateMessage;\r\n\r\n\t\t\t// build the spinner span\r\n\t\t\tvar spinnerSpan: HTMLSpanElement = document.createElement('span');\r\n\t\t\tspinnerSpan.className = \"visually-hidden\"\r\n\t\t\tspinnerSpan.innerHTML = \"Loading...\"\r\n\r\n\t\t\t// build the spinner div\r\n\t\t\tvar spinnerDiv: HTMLDivElement = document.createElement('div');\r\n\t\t\tspinnerDiv.id = \"loading-spinner\"\r\n\t\t\tspinnerDiv.className = \"spinner-border ms-2\"\r\n\t\t\tspinnerDiv.setAttribute(\"role\", \"status\");\r\n\r\n\t\t\t// append wrapper and the spinner to the element\r\n\t\t\twrapperDiv.appendChild(textSpan);\r\n\t\t\twrapperDiv.appendChild(spinnerDiv).appendChild(spinnerSpan);\r\n\r\n\t\t\t// insert the inner html into the base div\r\n\t\t\tthis.showTextOverlay(wrapperDiv.outerHTML);\r\n\t\t} else {\r\n\r\n\t\t}\r\n\r\n                function openFullscreen() {\r\n                        let body = document.documentElement;\r\n                        if (body.requestFullscreen) {\r\n                                body.requestFullscreen();\r\n                        } else if (body.webkitRequestFullscreen) { /* Safari */\r\n                                body.webkitRequestFullscreen();\r\n                        } else if (body.msRequestFullscreen) { /* IE11 */\r\n                                body.msRequestFullscreen();\r\n                        }\r\n                }\r\n\t}\r\n\r\n\t/**\r\n\t * Set up functionality to happen when receiving an auth response and updates an info overlay with the response\r\n\t * @param authResponse - the auth response message type\r\n\t */\r\n\tonAuthenticationResponse(authResponse: libspsfrontend.MessageAuthResponse) {\r\n\t\tlet instanceStateMessage = \"\";\r\n\t\tlet isError = false;\r\n\r\n\t\t// get the response type\r\n\t\tswitch (authResponse.outcome) {\r\n\t\t\tcase libspsfrontend.MessageAuthResponseOutcomeType.AUTHENTICATED:\r\n\t\t\t\tinstanceStateMessage = \"Authentication has succeeded. Requesting Instance\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase libspsfrontend.MessageAuthResponseOutcomeType.INVALID_TOKEN:\r\n\t\t\t\tinstanceStateMessage = \"Invalid Token: \" + authResponse.error;\r\n\t\t\t\tisError = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase libspsfrontend.MessageAuthResponseOutcomeType.REDIRECT:\r\n\t\t\t\tinstanceStateMessage = \"Redirecting to: \" + authResponse.redirect;\r\n\t\t\t\tbreak;\r\n\t\t\tcase libspsfrontend.MessageAuthResponseOutcomeType.ERROR:\r\n\t\t\t\tinstanceStateMessage = \"Error: \" + authResponse.error;\r\n\t\t\t\tisError = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tinstanceStateMessage = \"Unhandled Auth Response: \" + authResponse.outcome;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// if the response is an error show the error instead of the info \r\n\t\tif (isError) {\r\n\t\t\tthis.showErrorOverlay(instanceStateMessage);\r\n\t\t} else {\r\n\t\t\tthis.showTextOverlay(instanceStateMessage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set up button click functions and button functionality  \r\n\t */\r\n\tConfigureButtons() {\r\n\r\n\t\t// set up the settings \r\n\t\tdocument.getElementById('settingsBtn').onclick = () => this.settingsClicked();\r\n\t\tdocument.getElementById('settingsClose').onclick = () => this.settingsClicked();\r\n\r\n\t\t// setup the info button\r\n\t\tdocument.getElementById('statsBtn').onclick = () => this.statsClicked();\r\n\t\tdocument.getElementById('statsClose').onclick = () => this.statsClicked();\r\n\r\n\t\t// setup the Force TURN toggle\r\n\t\tthis.setUpToggleWithUrlParams(this.forceTurnToggle, \"ForceTURN\");\r\n\r\n\t\tthis.setUpControlSchemeTypeToggle(this.controlSchemeToggle);\r\n\r\n\t\t// set up the restart stream button\r\n\t\tdocument.getElementById(\"restart-stream-button\").onclick = () => {\r\n\t\t\tthis.settingsPanel.classList.toggle(\"panel-wrap-visible\");\r\n\t\t\tthis.iWebRtcController.restartStreamAutomaticity();\r\n\t\t}\r\n\r\n\t\tdocument.getElementById(\"btn-streaming-settings\").onclick = () => {\r\n\t\t\tlibspsfrontend.Logger.Log(libspsfrontend.Logger.GetStackTrace(), \"--------  Sending Streaming settings  --------\", 7);\r\n\t\t\tlet encode: libspsfrontend.Encoder = {\r\n\t\t\t\tMinQP: Number(this.encoderMinQpText.value),\r\n\t\t\t\tMaxQP: Number(this.encoderMaxQpText.value),\r\n\t\t\t}\r\n\r\n\t\t\tlet webRtcSettings: libspsfrontend.WebRTC = {\r\n\t\t\t\tFPS: Number(this.webRtcFpsText.value),\r\n\t\t\t\tMinBitrate: Number(this.webRtcMinBitrateText.value) * 1000,\r\n\t\t\t\tMaxBitrate: Number(this.webRtcMaxBitrateText.value) * 1000,\r\n\t\t\t}\r\n\r\n\t\t\tthis.iWebRtcController.sendEncoderSettings(encode);\r\n\t\t\tthis.iWebRtcController.sendWebRtcSettings(webRtcSettings);\r\n\t\t\tlibspsfrontend.Logger.Log(libspsfrontend.Logger.GetStackTrace(), \"-------------------------------------------\", 7);\r\n\t\t}\r\n\r\n\r\n\t\t// sending UI descriptors \r\n\t\tdocument.getElementById(\"sendUiDescriptor\").onclick = () => {\r\n\t\t\tthis.iWebRtcController.sendUeUiDescriptor(this.uiDescriptorText.value);\r\n\r\n\t\t};\r\n\r\n\t\t// show the current fps on screen \r\n\t\tdocument.getElementById(\"show-fps-button\").onclick = () => {\r\n\t\t\tthis.iWebRtcController.sendShowFps();\r\n\t\t};\r\n\r\n\t\t// make the player fill the window\r\n\t\tthis.enlargeDisplayToFillWindow.onchange = () => {\r\n\t\t\tthis.iWebRtcController.resizePlayerStyle();\r\n\t\t\tthis.iWebRtcController.setEnlargeToFillDisplay(this.enlargeDisplayToFillWindow.checked);\r\n\t\t};\r\n\r\n\t\t// make the player match the view port resolution \r\n\t\tthis.toggleMatchViewPortRes.onchange = () => {\r\n\t\t\tthis.iWebRtcController.matchViewportResolution = this.toggleMatchViewPortRes.checked;\r\n\t\t\tthis.iWebRtcController.updateVideoStreamSize();\r\n\t\t};\r\n\r\n\t\t// quality control ownership checkbox \r\n\t\tthis.qualityControlOwnershipCheckBox.onchange = () => {\r\n\t\t\tif (this.qualityControlOwnershipCheckBox.checked === false) {\r\n\t\t\t\tthis.iWebRtcController.sendRequestQualityControlOwnership();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Shows or hides the settings panel if clicked\r\n\t */\r\n\tsettingsClicked() {\r\n\t\t/**\r\n\t\t * Toggle settings panel. If stats panel is already open, close it and then open settings\r\n\t\t */\r\n\t\tif (this.statsPanel.classList.contains(\"panel-wrap-visible\")) {\r\n\t\t\tthis.statsPanel.classList.toggle(\"panel-wrap-visible\");\r\n\t\t}\r\n\r\n\t\tthis.settingsPanel.classList.toggle(\"panel-wrap-visible\");\r\n\t}\r\n\r\n\t/**\r\n\t * Shows or hides the stats panel if clicked\r\n\t */\r\n\tstatsClicked() {\r\n\t\t/**\r\n\t\t * Toggle stats panel. If settings panel is already open, close it and then open stats\r\n\t\t */\r\n\t\tif (this.settingsPanel.classList.contains(\"panel-wrap-visible\")) {\r\n\t\t\tthis.settingsPanel.classList.toggle(\"panel-wrap-visible\");\r\n\t\t}\r\n\r\n\t\tthis.statsPanel.classList.toggle(\"panel-wrap-visible\");\r\n\t}\r\n\r\n\t/**\r\n\t * Set up toggle element for controlling hovering mouse or locked mouse  \r\n\t * @param toggleElement the toggle html element to be set up\r\n\t */\r\n\tsetUpControlSchemeTypeToggle(toggleElement: HTMLInputElement) {\r\n\t\tif (toggleElement) {\r\n\r\n\t\t\t// set the state for the toggle based on the config\r\n\t\t\tif (this.config.controlScheme === libspsfrontend.ControlSchemeType.LockedMouse) {\r\n\t\t\t\tthis.controlSchemeToggleTitle.innerHTML = \"Control Scheme: Locked Mouse\"\r\n\t\t\t\tthis.controlSchemeToggle.checked = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.controlSchemeToggleTitle.innerHTML = \"Control Scheme: Hovering Mouse\"\r\n\t\t\t\tthis.controlSchemeToggle.checked = true;\r\n\t\t\t}\r\n\r\n\t\t\t// set the onChange event \r\n\t\t\ttoggleElement.onchange = () => {\r\n\t\t\t\tif (toggleElement.checked === true) {\r\n\t\t\t\t\tthis.controlSchemeToggleTitle.innerHTML = \"Control Scheme: Hovering Mouse\"\r\n\t\t\t\t\tthis.config.controlScheme = libspsfrontend.ControlSchemeType.HoveringMouse;\r\n\t\t\t\t\tthis.iWebRtcController.activateRegisterMouse();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.controlSchemeToggleTitle.innerHTML = \"Control Scheme: Locked Mouse\"\r\n\t\t\t\t\tthis.config.controlScheme = libspsfrontend.ControlSchemeType.LockedMouse;\r\n\t\t\t\t\tthis.iWebRtcController.activateRegisterMouse();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set up url toggle buttons\r\n\t * @param toggleElement the toggle element being activated  \r\n\t * @param urlParameterKey the url key that is being made use of\r\n\t */\r\n\tsetUpToggleWithUrlParams(toggleElement: HTMLInputElement, urlParameterKey: string) {\r\n\t\tif (toggleElement) {\r\n\t\t\t//Check if the element has been set from the URL Params \r\n\t\t\ttoggleElement.checked = new URLSearchParams(window.location.search).has(urlParameterKey);\r\n\r\n\t\t\ttoggleElement.onchange = () => {\r\n\t\t\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\t\t\tif (toggleElement.checked === true) {\r\n\t\t\t\t\turlParams.set(urlParameterKey, \"true\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\turlParams.delete(urlParameterKey);\r\n\t\t\t\t}\r\n\t\t\t\twindow.history.replaceState({}, '', urlParams.toString() !== \"\" ? `${window.location.pathname}?${urlParams}` : `${window.location.pathname}`);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disable shared session links for all players\r\n\t * @returns false\r\n\t */\r\n\tasync IsLinkSharingEnabled() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Handle when the Video has been Initialised\r\n\t */\r\n\tonVideoInitialised() {\r\n\t\tconsole.log('ready!');\r\n\t\tthis.streamReady = true;\r\n\t\t// starting a latency check\r\n\t\tdocument.getElementById(\"btn-start-latency-test\").onclick = () => {\r\n\t\t\tthis.iWebRtcController.sendLatencyTest();\r\n\t\t}\r\n\r\n\t\t// Set up stream tools header functionality\r\n\t\tthis.viewSettingsHeader.onclick = () => {\r\n\t\t\tthis.viewSettingsContainer.classList.contains(\"d-none\") ? this.viewSettingsContainer.classList.remove(\"d-none\") : this.viewSettingsContainer.classList.add(\"d-none\")\r\n\t\t}\r\n\r\n\t\tthis.commandsHeader.onclick = () => {\r\n\t\t\tthis.commandsContainer.classList.contains(\"d-none\") ? this.commandsContainer.classList.remove(\"d-none\") : this.commandsContainer.classList.add(\"d-none\")\r\n\t\t}\r\n\r\n\t\tthis.streamingSettingsHeader.onclick = () => {\r\n\t\t\tthis.streamingSettingsContainer.classList.contains(\"d-none\") ? this.streamingSettingsContainer.classList.remove(\"d-none\") : this.streamingSettingsContainer.classList.add(\"d-none\")\r\n\t\t}\r\n\t\tthis.statsHeader.onclick = () => {\r\n\t\t\tthis.statsContainer.classList.contains(\"d-none\") ? this.statsContainer.classList.remove(\"d-none\") : this.statsContainer.classList.add(\"d-none\")\r\n\t\t}\r\n\t\tthis.latencyHeader.onclick = () => {\r\n\t\t\tthis.latencyContainer.classList.contains(\"d-none\") ? this.latencyContainer.classList.remove(\"d-none\") : this.latencyContainer.classList.add(\"d-none\")\r\n\t\t}\r\n\r\n\t\t// Reveal all the container\r\n\t\tthis.viewSettingsContainer.classList.remove(\"d-none\");\r\n\t\tthis.commandsContainer.classList.remove(\"d-none\");\r\n\t\tthis.streamingSettingsContainer.classList.remove(\"d-none\");\r\n\t\tthis.statsContainer.classList.remove(\"d-none\");\r\n\r\n\t\tthis.videoStartTime = Date.now();\r\n\t}\r\n\r\n\t/**\r\n\t * Extended from the base functionality; displays the error overlay and resets the buttons stream tools upon disconnect \r\n\t * @param eventText \r\n\t */\r\n\tonDisconnect(eventText: string) {\r\n\t\t// display the text overlay by calling its super method so it will use its default behavior first \r\n\t\tsuper.onDisconnect(`${eventText}`);\r\n\r\n\t\t// update all of the tools upon disconnect \r\n\t\tthis.onVideoEncoderAvgQP(0);\r\n\r\n\t\t// starting a latency check\r\n\t\tdocument.getElementById(\"btn-start-latency-test\").onclick = () => { }\r\n\r\n\t\t// Set up stream tools header functionality\r\n\t\tthis.viewSettingsHeader.onclick = () => { }\r\n\t\tthis.commandsHeader.onclick = () => { }\r\n\t\tthis.streamingSettingsHeader.onclick = () => { }\r\n\t\tthis.statsHeader.onclick = () => { }\r\n\t\tthis.latencyHeader.onclick = () => { }\r\n\r\n\t\t// Hide all the containers\r\n\t\tthis.viewSettingsContainer.classList.add(\"d-none\");\r\n\t\tthis.commandsContainer.classList.add(\"d-none\");\r\n\t\tthis.streamingSettingsContainer.classList.add(\"d-none\");\r\n\t\tthis.statsContainer.classList.add(\"d-none\");\t\r\n\t}\r\n\t/**\r\n\t * `Takes the InitialSettings and wired to frontend\r\n\t * @param settings - Settings sent from the UE Instance`\r\n\t */\r\n\tonInitialSettings(settings: libspsfrontend.InitialSettings): void {\r\n\t\tif (settings.Encoder) {\r\n\t\t\tthis.encoderMinQpText.value = settings.Encoder.MinQP.toString();\r\n\t\t\tthis.encoderMaxQpText.value = settings.Encoder.MaxQP.toString();\r\n\t\t}\r\n\t\tif (settings.WebRTC) {\r\n\t\t\tthis.webRtcMinBitrateText.value = settings.WebRTC.MinBitrate.toString();\r\n\t\t\tthis.webRtcMaxBitrateText.value = settings.WebRTC.MaxBitrate.toString();\r\n\t\t\tthis.webRtcFpsText.value = settings.WebRTC.FPS.toString();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Used to handle the Video Stats from the Peer Connection Client\r\n\t* @param stats - Stats generate from the Peer Connection Client\r\n\t*/\r\n\tonVideoStats(stats: libspsfrontend.AggregatedStats): void {\r\n\t\tlet runTime = new Date(Date.now() - this.videoStartTime).toISOString().substr(11, 8);\r\n\t\tlet statsText = \"\";\r\n\t\tlet inboundData = this.formatBytes(stats.inboundVideoStats.bytesReceived, 2);\r\n\r\n\t\t// format numbering based on the browser language\r\n\t\tlet numberFormat = new Intl.NumberFormat(window.navigator.language, {\r\n            maximumFractionDigits: 0\r\n        });\r\n\r\n\t\t// ensure that we have a currentRoundTripTime coming in from stats and format it if it's a number\r\n\t\tlet netRTT = stats.candidatePair.hasOwnProperty('currentRoundTripTime') && stats.isNumber(stats.candidatePair.currentRoundTripTime) ? numberFormat.format(stats.candidatePair.currentRoundTripTime * 1000) : 'Can\\'t calculate';\r\n\r\n\t\tstatsText += `<div>Duration: ${runTime}</div>`;\r\n\t\tstatsText += `<div>Received: ${inboundData}</div>`;\r\n\t\tstatsText += `<div>Packets Lost: ${stats.inboundVideoStats.packetsLost}</div>`;\r\n\t\tstatsText += `<div>Bitrate (kbps): ${stats.inboundVideoStats.bitrate}</div>`;\r\n\t\tstatsText += `<div>Video Resolution: ${\r\n            stats.inboundVideoStats.hasOwnProperty('frameWidth') && stats.inboundVideoStats.frameWidth && stats.inboundVideoStats.hasOwnProperty('frameHeight') && stats.inboundVideoStats.frameHeight ?\r\n                stats.inboundVideoStats.frameWidth + 'x' + stats.inboundVideoStats.frameHeight : 'Chrome only'\r\n            }</div>`;\r\n\t\tstatsText += `<div>Frames Decoded: ${stats.inboundVideoStats.hasOwnProperty('framesDecoded') ? numberFormat.format(stats.inboundVideoStats.framesDecoded) : 'Chrome only'}</div>`;\r\n\t\tstatsText += `<div>Packets Lost: ${stats.inboundVideoStats.hasOwnProperty('packetsLost') ? numberFormat.format(stats.inboundVideoStats.packetsLost) : 'Chrome only'}</div>`;\r\n\t\tstatsText += `<div>Framerate: ${stats.inboundVideoStats.framerate}</div>`;\r\n\t\tstatsText += `<div>Frames dropped: ${stats.inboundVideoStats.framesDropped}</div>`;\r\n\t\tstatsText += `<div>Net RTT (ms): ${netRTT}</div>`;\r\n\t\t//statsText += `<div>Browser receive to composite (ms): ${stats.inboundVideoStats.receiveToCompositeMs}</div>`;\r\n\t\tstatsText += `<div>Video Quantization Parameter: ${this.videoQpIndicator.videoEncoderAvgQP}</div>`;\r\n\r\n\t\tlet statsDiv = document.getElementById(\"statisticsResult\");\r\n\t\tstatsDiv.innerHTML = statsText;\r\n\r\n\t\tlibspsfrontend.Logger.Log(libspsfrontend.Logger.GetStackTrace(), `--------- Stats ---------\\n ${stats}\\n------------------------`, 6);\r\n\r\n\t\tif (this.sendStatsToServer.checked === true) {\r\n\t\t\tthis.iWebRtcController.sendStatsToSignallingServer(stats);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* formats Bytes coming in for video stats\r\n\t* @param bytes number to convert\r\n\t* @param decimals number of decimal places\r\n\t*/\r\n\tformatBytes(bytes: number, decimals: number): string {\r\n\t\tif (bytes === 0) {\r\n\t\t\treturn \"0\";\r\n\t\t}\r\n\r\n\t\tconst factor: number = 1024;\r\n\t\tconst dm = decimals < 0 ? 0 : decimals;\r\n\t\tconst sizes = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\r\n\r\n\t\tconst i = Math.floor(Math.log(bytes) / Math.log(factor));\r\n\r\n\t\treturn parseFloat((bytes / Math.pow(factor, i)).toFixed(dm)) + ' ' + sizes[i];\r\n\t}\r\n\r\n\t/**\r\n\t* Handles the result of the UE Latency Test\r\n\t* @param latencyTimings - Latency Test Timings sent from the UE Instance \r\n\t*/\r\n\tonLatencyTestResult(latencyTimings: libspsfrontend.LatencyTestResults): void {\r\n\t\tlibspsfrontend.Logger.Log(libspsfrontend.Logger.GetStackTrace(), latencyTimings.toString(), 6);\r\n\t\tlet latencyStatsInnerHTML = '';\r\n\t\tlatencyStatsInnerHTML += \"<div>Net latency RTT (ms): \" + latencyTimings.networkLatency + \"</div>\";\r\n\t\tlatencyStatsInnerHTML += \"<div>UE Encode (ms): \" + latencyTimings.EncodeMs + \"</div>\";\r\n\t\tlatencyStatsInnerHTML += \"<div>UE Capture (ms): \" + latencyTimings.CaptureToSendMs + \"</div>\";\r\n\t\tlatencyStatsInnerHTML += \"<div>Browser send latency (ms): \" + latencyTimings.browserSendLatency + \"</div>\";\r\n\t\tlatencyStatsInnerHTML += latencyTimings.frameDisplayDeltaTimeMs && latencyTimings.browserReceiptTimeMs ? \"<div>Browser receive latency (ms): \" + latencyTimings.frameDisplayDeltaTimeMs + \"</div>\" : \"\";\r\n\t\tlatencyStatsInnerHTML += \"<div>Total latency (excluding browser) (ms): \" + latencyTimings.latencyExcludingDecode + \"</div>\";\r\n\t\tlatencyStatsInnerHTML += latencyTimings.endToEndLatency ? \"<div>Total latency (ms): \" + latencyTimings.endToEndLatency + \"</div>\" : \"\";\r\n\r\n\t\tthis.latencyContainer.classList.remove(\"d-none\")\r\n\r\n\t\tdocument.getElementById(\"latencyStatsResults\").innerHTML = latencyStatsInnerHTML;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles when the ownership flag is sent from the signaling server\r\n\t * @param hasQualityOwnership - flag if the user has quality ownership\r\n\t */\r\n\tonQualityControlOwnership(hasQualityOwnership: boolean): void {\r\n\t\tthis.qualityControlOwnershipCheckBox.checked = hasQualityOwnership;\r\n\t}\r\n\r\n\t/**\r\n\t  * Calls updateQpTooltip to update the QP colour light\r\n\t  * @param QP - The video encoder QP number needed to find the average\r\n\t  */\r\n\tonVideoEncoderAvgQP(QP: number): void {\r\n\t\tthis.videoQpIndicator.updateQpTooltip(QP);\r\n\t}\r\n}\r\n\r\n/**\r\n * Declare additions to global html objects that do not exist on the bases\r\n */\r\ndeclare global {\r\n\tinterface Document {\r\n\t\twebkitIsFullScreen?: boolean;\r\n\t\tmozFullScreen?: boolean;\r\n\t\twebkitFullscreenEnabled?: boolean;\r\n\t\tmozCancelFullScreen?: () => Promise<void>;\r\n\t\tmsExitFullscreen?: () => Promise<void>;\r\n\t\twebkitExitFullscreen?: () => Promise<void>;\r\n\t\tmozFullScreenElement?: Element;\r\n\t\tmsFullscreenElement?: Element;\r\n\t\twebkitFullscreenElement?: Element;\r\n\t}\r\n\r\n\tinterface HTMLElement {\r\n\t\tmsRequestFullscreen?: () => Promise<void>;\r\n\t\tmozRequestFullscreen?: () => Promise<void>;\r\n\t\twebkitRequestFullscreen?: () => Promise<void>;\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}