{"ast":null,"code":"var _jsxFileName = \"/Users/w.j.w.q/palatial-web-login/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { isDesktop, isIPad13, isTablet, isMobile, osName, browserName } from 'react-device-detect';\nimport './App.css';\nimport logoPng from './Images/png/Palatial-Logo_White 1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [device, setDevice] = useState('Desktop');\n  useEffect(() => {\n    if (isMobile && !isIPad13) {\n      setDevice('Mobile');\n    } else if (isIPad13 || isTablet) {\n      setDevice('Tablet');\n    } else if (isDesktop) {\n      setDevice('Desktop');\n    }\n    if (isMobile || isTablet || isIPad13) {\n      document.body.style.height = `${window.innerHeight}px`;\n      window.addEventListener('touchmove', function (event) {\n        event.preventDefault();\n      }, {\n        passive: false\n      });\n    }\n  }, []);\n  const style = isMobile || isTablet || isIPad13 ? {\n    height: '100%',\n    overflow: 'hidden'\n  } : {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopUp\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoPng,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"this is a test message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You are on a \", device, \" device using \", browserName, \" on \", osName, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EfVqbn5smbrFlrLbR4PEFCG9sxk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","isDesktop","isIPad13","isTablet","isMobile","osName","browserName","logoPng","jsxDEV","_jsxDEV","App","_s","device","setDevice","document","body","style","height","window","innerHeight","addEventListener","event","preventDefault","passive","overflow","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/w.j.w.q/palatial-web-login/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { isDesktop, isIPad13, isTablet, isMobile, osName, browserName } from 'react-device-detect';\nimport './App.css';\nimport logoPng from './Images/png/Palatial-Logo_White 1.png';\n\nfunction App() {\n  const [device, setDevice] = useState('Desktop');\n\n  useEffect(() => {\n    if (isMobile && !isIPad13 ) {\n      setDevice('Mobile');\n    } else if (isIPad13 || isTablet) {\n      setDevice('Tablet');\n    } else if (isDesktop) {\n      setDevice('Desktop');\n    }\n\n    if (isMobile || isTablet || isIPad13) {\n      document.body.style.height = `${window.innerHeight}px`;\n      window.addEventListener('touchmove', function (event) {\n        event.preventDefault();\n      }, { passive: false });\n    }\n  }, []);\n\n  const style = (isMobile || isTablet || isIPad13 ) ? { height: '100%', overflow: 'hidden' } : {};\n\n  return (\n    <div className=\"App\">\n      <div className = \"PopUp\">\n        {/*insert logo*/}\n        <div className = \"Logo\">\n        <img src={logoPng} alt='logo'/>\n          <p>this is a test message</p>\n        </div>\n        {/*insert Username Text Field*/}\n        {/*insert Tutorial Toggle*/}\n        {/*insert consent check box*/}\n        {/*proceed button*/}\n      </div>\n      <p>You are on a {device} device using {browserName} on {osName}.</p>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,qBAAqB;AAClG,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,SAAS,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,IAAII,QAAQ,IAAI,CAACF,QAAQ,EAAG;MAC1BW,SAAS,CAAC,QAAQ,CAAC;IACrB,CAAC,MAAM,IAAIX,QAAQ,IAAIC,QAAQ,EAAE;MAC/BU,SAAS,CAAC,QAAQ,CAAC;IACrB,CAAC,MAAM,IAAIZ,SAAS,EAAE;MACpBY,SAAS,CAAC,SAAS,CAAC;IACtB;IAEA,IAAIT,QAAQ,IAAID,QAAQ,IAAID,QAAQ,EAAE;MACpCY,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,MAAM,GAAI,GAAEC,MAAM,CAACC,WAAY,IAAG;MACtDD,MAAM,CAACE,gBAAgB,CAAC,WAAW,EAAE,UAAUC,KAAK,EAAE;QACpDA,KAAK,CAACC,cAAc,CAAC,CAAC;MACxB,CAAC,EAAE;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMP,KAAK,GAAIZ,QAAQ,IAAID,QAAQ,IAAID,QAAQ,GAAK;IAAEe,MAAM,EAAE,MAAM;IAAEO,QAAQ,EAAE;EAAS,CAAC,GAAG,CAAC,CAAC;EAE/F,oBACEf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAKgB,SAAS,EAAG,OAAO;MAAAC,QAAA,eAEtBjB,OAAA;QAAKgB,SAAS,EAAG,MAAM;QAAAC,QAAA,gBACvBjB,OAAA;UAAKkB,GAAG,EAAEpB,OAAQ;UAACqB,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC7BvB,OAAA;UAAAiB,QAAA,EAAG;QAAsB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKH,CAAC,eACNvB,OAAA;MAAAiB,QAAA,GAAG,eAAa,EAACd,MAAM,EAAC,gBAAc,EAACN,WAAW,EAAC,MAAI,EAACD,MAAM,EAAC,GAAC;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV;AAACrB,EAAA,CAtCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}