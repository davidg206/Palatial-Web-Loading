{"ast":null,"code":"import { osName, browserName } from 'react-device-detect';\nimport { delegate, emitUIInteraction } from '../DOMDelegate';\nconst handleSubmit = (userName, password, firstTimeUser, consentAccepted, device) => {\n  return event => {\n    if (userName && password && firstTimeUser !== null && consentAccepted) {\n      const data = {\n        deviceType: device,\n        osName: osName,\n        browserName: browserName,\n        userName: userName,\n        consentAccepted: consentAccepted,\n        firstTimeUser: firstTimeUser ? \"Yes\" : \"No\",\n        password: password,\n        timestamp: new Date().getTime() // current time in Epoch time\n      };\n\n      /*\n      //Use this to test if input is properly logged//\n           const json = JSON.stringify(data);\n      const blob = new Blob([json], {type: \"application/json\"});\n      const href = URL.createObjectURL(blob);\n           const link = document.createElement('a');\n      link.href = href;\n      link.download = 'userInformation.json';\n           document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      */\n\n      console.log(\"Sending: \" + JSON.stringify(data)); // replace this line with actual code to handle the data\n\n      let button = event.target;\n      button.disabled = true;\n      const videoElement = document.getElementById(\"myVideo\");\n      videoElement.play();\n      delegate.checkStreamReady(() => {\n        emitUIInteraction(data);\n        const root = document.getElementById(\"root\");\n        root.classList.add(\"fade-out\");\n        root.addEventListener(\"transitionend\", () => {\n          document.getElementById(\"player\").classList.remove(\"fade-out\");\n          document.getElementById(\"player\").classList.add(\"fade-in\");\n        });\n        delegate.onPlayAction();\n      });\n    } else {\n      // handle incomplete form\n    }\n  };\n};\nexport default handleSubmit;","map":{"version":3,"names":["osName","browserName","delegate","emitUIInteraction","handleSubmit","userName","password","firstTimeUser","consentAccepted","device","event","data","deviceType","timestamp","Date","getTime","console","log","JSON","stringify","button","target","disabled","videoElement","document","getElementById","play","checkStreamReady","root","classList","add","addEventListener","remove","onPlayAction"],"sources":["C:/Users/employee/Palatial-Web-Loading/src/utils/handleSubmit.js"],"sourcesContent":["import { osName, browserName } from 'react-device-detect';\nimport { delegate, emitUIInteraction } from '../DOMDelegate';\n\nconst handleSubmit = (userName, password, firstTimeUser, consentAccepted, device) => {\n    return (event) => {\n        if (userName && password && firstTimeUser !== null && consentAccepted) {\n            const data = {\n                deviceType: device,\n                osName: osName,\n                browserName: browserName,\n                userName: userName,\n                consentAccepted: consentAccepted,\n                firstTimeUser: firstTimeUser ? \"Yes\" : \"No\",\n                password: password,\n                timestamp: new Date().getTime() // current time in Epoch time\n            };\n\n            /*\n            //Use this to test if input is properly logged//\n    \n            const json = JSON.stringify(data);\n            const blob = new Blob([json], {type: \"application/json\"});\n            const href = URL.createObjectURL(blob);\n    \n            const link = document.createElement('a');\n            link.href = href;\n            link.download = 'userInformation.json';\n    \n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            */\n\n            console.log(\"Sending: \" + JSON.stringify(data)); // replace this line with actual code to handle the data\n\n            let button = event.target;\n            button.disabled = true;\n\n            const videoElement = document.getElementById(\"myVideo\");\n            videoElement.play();\n\n            delegate.checkStreamReady(() => {\n                emitUIInteraction(data);\r\n                const root = document.getElementById(\"root\");\r\n                root.classList.add(\"fade-out\");\r\n                \r\n                root.addEventListener(\"transitionend\", () => {\r\n                    document.getElementById(\"player\").classList.remove(\"fade-out\");\r\n                    document.getElementById(\"player\").classList.add(\"fade-in\");\r\n                });\r\n\r\n                delegate.onPlayAction();\r\n            });\n\n        } else {\n            // handle incomplete form\n        }\r\n    }\n};\n\nexport default handleSubmit;\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,WAAW,QAAQ,qBAAqB;AACzD,SAASC,QAAQ,EAAEC,iBAAiB,QAAQ,gBAAgB;AAE5D,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,eAAe,EAAEC,MAAM,KAAK;EACjF,OAAQC,KAAK,IAAK;IACd,IAAIL,QAAQ,IAAIC,QAAQ,IAAIC,aAAa,KAAK,IAAI,IAAIC,eAAe,EAAE;MACnE,MAAMG,IAAI,GAAG;QACTC,UAAU,EAAEH,MAAM;QAClBT,MAAM,EAAEA,MAAM;QACdC,WAAW,EAAEA,WAAW;QACxBI,QAAQ,EAAEA,QAAQ;QAClBG,eAAe,EAAEA,eAAe;QAChCD,aAAa,EAAEA,aAAa,GAAG,KAAK,GAAG,IAAI;QAC3CD,QAAQ,EAAEA,QAAQ;QAClBO,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;MACpC,CAAC;;MAED;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAKYC,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEjD,IAAIS,MAAM,GAAGV,KAAK,CAACW,MAAM;MACzBD,MAAM,CAACE,QAAQ,GAAG,IAAI;MAEtB,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MACvDF,YAAY,CAACG,IAAI,CAAC,CAAC;MAEnBxB,QAAQ,CAACyB,gBAAgB,CAAC,MAAM;QAC5BxB,iBAAiB,CAACQ,IAAI,CAAC;QACvB,MAAMiB,IAAI,GAAGJ,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;QAC5CG,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;QAE9BF,IAAI,CAACG,gBAAgB,CAAC,eAAe,EAAE,MAAM;UACzCP,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACI,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;UAC9DR,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACI,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;QAC9D,CAAC,CAAC;QAEF5B,QAAQ,CAAC+B,YAAY,CAAC,CAAC;MAC3B,CAAC,CAAC;IAEN,CAAC,MAAM;MACH;IAAA;EAER,CAAC;AACL,CAAC;AAED,eAAe7B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}