{"ast":null,"code":"import { osName, browserName } from 'react-device-detect';\nimport * as libspsfrontend from 'backend-dom-components';\nconst handleSubmit = (userName, password, firstTimeUser, consentAccepted, device) => {\n  console.log(\"submit\");\n  if (userName && password && firstTimeUser !== null && consentAccepted) {\n    const data = {\n      deviceType: device,\n      osName: osName,\n      browserName: browserName,\n      userName: userName,\n      consentAccepted: consentAccepted,\n      firstTimeUser: firstTimeUser ? \"Yes\" : \"No\",\n      password: password,\n      timestamp: new Date().getTime() // current time in Epoch time\n    };\n\n    /*\n    //Use this to test if input is properly logged//\n     const json = JSON.stringify(data);\n    const blob = new Blob([json], {type: \"application/json\"});\n    const href = URL.createObjectURL(blob);\n     const link = document.createElement('a');\n    link.href = href;\n    link.download = 'userInformation.json';\n     document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    */\n\n    console.log(data); // replace this line with actual code to handle the data\n  } else {\n    // handle incomplete form\n  }\n};\nexport default handleSubmit;","map":{"version":3,"names":["osName","browserName","libspsfrontend","handleSubmit","userName","password","firstTimeUser","consentAccepted","device","console","log","data","deviceType","timestamp","Date","getTime"],"sources":["C:/Users/employee/Palatial-Web-Loading/src/utils/handleSubmit.js"],"sourcesContent":["import { osName, browserName } from 'react-device-detect';\nimport * as libspsfrontend from 'backend-dom-components'\n\nconst handleSubmit = (userName, password, firstTimeUser, consentAccepted, device) => {\n    console.log(\"submit\")\n    if (userName && password && firstTimeUser !== null && consentAccepted) {\n        const data = {\n            deviceType: device,\n            osName: osName,\n            browserName: browserName,\n            userName: userName,\n            consentAccepted: consentAccepted,\n            firstTimeUser: firstTimeUser ? \"Yes\" : \"No\",\n            password: password,\n            timestamp: new Date().getTime() // current time in Epoch time\n        };\n\n        /*\n        //Use this to test if input is properly logged//\n\n        const json = JSON.stringify(data);\n        const blob = new Blob([json], {type: \"application/json\"});\n        const href = URL.createObjectURL(blob);\n\n        const link = document.createElement('a');\n        link.href = href;\n        link.download = 'userInformation.json';\n\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        */\n\n        console.log(data); // replace this line with actual code to handle the data\n\n    } else {\n        // handle incomplete form\n    }\n};\n\nexport default handleSubmit;\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,WAAW,QAAQ,qBAAqB;AACzD,OAAO,KAAKC,cAAc,MAAM,wBAAwB;AAExD,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,eAAe,EAAEC,MAAM,KAAK;EACjFC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,IAAIN,QAAQ,IAAIC,QAAQ,IAAIC,aAAa,KAAK,IAAI,IAAIC,eAAe,EAAE;IACnE,MAAMI,IAAI,GAAG;MACTC,UAAU,EAAEJ,MAAM;MAClBR,MAAM,EAAEA,MAAM;MACdC,WAAW,EAAEA,WAAW;MACxBG,QAAQ,EAAEA,QAAQ;MAClBG,eAAe,EAAEA,eAAe;MAChCD,aAAa,EAAEA,aAAa,GAAG,KAAK,GAAG,IAAI;MAC3CD,QAAQ,EAAEA,QAAQ;MAClBQ,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC;;IAED;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAKQN,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EAEvB,CAAC,MAAM;IACH;EAAA;AAER,CAAC;AAED,eAAeR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}